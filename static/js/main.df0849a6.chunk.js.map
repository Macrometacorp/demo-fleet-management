{"version":3,"sources":["app/components/Header.js","app/components/ButtonBar.js","app/components/ChartFilters.js","app/services/config.js","app/util/constants.js","app/services/streams.js","app/hooks/useInterval.js","app/components/LineChart.js","app/components/tables/FleetStatusTable.js","app/components/tables/InsightsTable.js","app/services/util.js","app/components/tables/AlertFilters.js","app/components/DatePicker.js","app/components/tables/ModalTable.js","app/components/ModalComponent.js","app/components/tables/AlertsTable.js","app/services/restql.js","app/components/Dashboard.js","App.js","reportWebVitals.js","index.js"],"names":["useStyles","makeStyles","header","fontWeight","aboutButton","top","right","position","backgroundColor","boxShadow","border","intializeButton","Header","handleOnIntialize","isIntializeButtonDisabled","classes","Grid","container","direction","justify","alignItems","Typography","variant","align","className","Button","onClick","CircularProgress","size","window","open","root","display","justifyContent","marginTop","actionButton","marginRight","width","ButtonBar","handleOnStart","handleOnStop","isStartButtonDisabled","isStopButtonDisabled","isStreamStarted","disabled","ChartFilters","setChartFilter","useState","selected","setSelected","useEffect","ToggleButtonGroup","value","exclusive","onChange","e","aria-label","style","margin","ToggleButton","config","gdnURL","apiKey","MAINTENANCE_CENTER","PLANNED_MAINTENANCE","TELEMATICS","GET_TELEMATICS_30_DAYS","GET_TOP5_MAINTENANCE_CENTERS_FOR_CITY","GET_ASSET_DETAILS","GET_FLEET_STATS_CHART_DATA","ENRICHTED_TELEMATICS","LOAD_DATASETS","TRUNCATE_DATASETS","STREAM_WORKERS","jsc8Client","jsC8","url","getDataset1","R","getDataset2","maintenanceCenterList","a","city","executeRestql","City","result","console","error","telematicList","assetDetails","Asset","processBooking","payload","insightList","data","fleetStats","fleetChartData","filter","tdata","week","year","month","all","forEach","item","startStopStream","start","steamsArr","reverse","element","activateStreamApp","message","createStreamReader","streamName","filters","Math","round","random","replace","response","useInterval","callback","delay","savedCallback","useRef","current","id","setInterval","clearInterval","flexDirection","securitiesSelect","selectGrid","paddingBottom","selectLabel","paddingRight","fontSize","chartCanvas","height","heading","LineChart","canvasRef","chartFilter","chartData","setChartData","initFleetChartData","ch","initChart","destroy","Chart","type","options","maintainAspectRatio","plugins","legend","elements","point","radius","scales","x","grid","y","labels","label","datasets","dataset1","borderColor","borderWidth","dataset2","ref","tableCell","padding","FleetStatusTable","setData","initFleetStats","Attention_Required","Critical_Status","Fleet_Health","Unplanned_Maintenance","Planned_Maintenance","TableContainer","component","Paper","Table","table","TableBody","Object","keys","map","key","i","TableRow","TableCell","arrow","color","Vehicle_With_Most_Frequent_Issues","Most_Common_Alert","Total_Cost_Of_Unplanned_Maintenance","Area_With_Most_Alerts","Least_Cost_Effective_Vehicle","InsightsTable","initInsightList","marginBottom","hasOwnProperty","activeButtonClass","borderRadius","formatDate","date","moment","b","from","printDate","format","getRand","floor","theme","activeActionButton","spacing","flex","AlertFilters","stats","setAlterFilter","critical","attention","booked","computeClass","val","DatePicker","props","datepickerContainer","$","datepicker","onSelect","onDateChange","defaultDate","initialDate","visibility","minWidth","pagination","ModalTable","handleSelect","alertData","selectedDate","initMaintenanceCenterList","results","TableHead","row","background","Name","Rating","Estimated_Time","Estimated_Cost","maintenaceData","closeImg","cursor","float","ModalComponent","openModal","closeModal","React","setOpen","status","modalData","setModalData","handleClose","handleSelectDate","_key","Fragment","Dialog","fullWidth","maxWidth","onClose","aria-labelledby","DialogTitle","DialogContent","DialogContentText","paddingTop","AlertsTable","alertsData","setOpenModal","alertStats","setAlertStats","alertFilter","fdata","setFData","odata","setOData","setTData","page","setPage","initTelematicList","initAssetDetails","Fault","asetDetail","Driver","Vehicle_Model","Work_Cost","tdate","Date","Booked_In","toISOString","Invoice_Number","Cost_Center","Work_Description","log","tempData","arr","j","temparr","chunk","length","push","slice","slicer","toLowerCase","Maintenance_Planned","Status_Level","Timestamp","Pagination","count","showFirstButton","showLastButton","event","handleBooking","intialize","truncateCollections","loadDataCollections","onReady","promises","collection","truncate","Promise","tpromises","section","Dashboard","setIsStreamStarted","isLoading","setIsLoading","isStopLoading","setIsStopLoading","isIntializeLoading","setIsIntializeLoading","streamConnections","setStreamConnections","setAlertsData","closeStreamAndWebSocket","terminate","startStreamAndWebSocket","establishConnectionForFree","alertsStreamConnection","prev","_consumer","on","send","JSON","stringify","messageId","parse","messageManipulation","tempArr","newData","msg","encodedMessage","decodedMessage","atob","parseMessage","Container","xs","createMuiTheme","typography","fontFamily","overrides","MuiTableCell","stickyHeader","head","MuiTypography","MuiButton","textTransform","MuiFormControl","MuiInputLabel","outlined","transform","MuiOutlinedInput","input","MuiPaginationItem","MuiToggleButton","MuiTableHead","MuiTableContainer","overflowX","App","ThemeProvider","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.df0849a6.chunk.js","sourcesContent":["import {\n  Button,\n  Grid,\n  makeStyles,\n  CircularProgress,\n  Typography,\n} from \"@material-ui/core\";\nimport React from \"react\";\n\nconst useStyles = makeStyles({\n  header: {\n    fontWeight: \"500 !important\",\n  },\n  aboutButton: {\n    top: \"1.1rem\",\n    right: \"2rem\",\n    position: \"absolute\",\n    backgroundColor: \"rgb(208 225 243)\",\n    boxShadow: \"none\",\n    border: \"1px solid rgb(169,169,169)\",\n  },\n  intializeButton: {\n    top: \"1.1rem\",\n    right: \"8rem\",\n    position: \"absolute\",\n    backgroundColor: \"rgb(208 225 243)\",\n    boxShadow: \"none\",\n    border: \"1px solid rgb(169,169,169)\",\n  },\n});\n\nconst Header = ({ handleOnIntialize, isIntializeButtonDisabled }) => {\n  const classes = useStyles();\n\n  return (\n    <>\n      <Grid container direction=\"column\" justify=\"center\" alignItems=\"stretch\">\n        <Typography variant=\"h4\" align=\"center\" className={classes.header}>\n          Macrometa - Realtime Fleet Management\n        </Typography>\n        <Typography variant=\"subtitle1\" align=\"center\" className={classes.header}>\n                    Simple, secure and scalable realtime fleet management\n          </Typography>\n      </Grid>\n      <Button\n        variant=\"contained\"\n        className={classes.intializeButton}\n        onClick={() => {\n          handleOnIntialize();\n        }}\n      >\n        {isIntializeButtonDisabled ? (\n          <CircularProgress size={24} />\n        ) : (\n          \"Intialize\"\n        )}\n      </Button>\n      <Button\n        variant=\"contained\"\n        className={classes.aboutButton}\n        onClick={() => {\n          window.open(\n            \"https://github.com/Macrometacorp/demo-fleet-management\",\n            \"_blank\"\n          );\n        }}\n      >\n        About\n      </Button>\n    </>\n  );\n};\n\nexport default Header;\n","import { Button, CircularProgress, makeStyles } from \"@material-ui/core\";\nimport React from \"react\";\n\nconst useStyles = makeStyles({\n  root: {\n    display: \"flex\",\n    justifyContent: \"center\",\n    marginTop: \"1rem\",\n  },\n  actionButton: {\n    marginRight: \"3rem\",\n    backgroundColor: \"rgb(208 225 243)\",\n    width: \"9rem\",\n    boxShadow: \"none\",\n    border: \"1px solid rgb(169,169,169)\",\n  },\n});\n\nconst ButtonBar = ({\n  handleOnStart,\n  handleOnStop,\n  isStartButtonDisabled,\n  isStopButtonDisabled,\n  isStreamStarted,\n}) => {\n  const classes = useStyles();\n\n  return (\n    <div className={classes.root}>\n      <Button\n        variant=\"contained\"\n        className={classes.actionButton}\n        onClick={handleOnStart}\n        disabled={isStartButtonDisabled || isStreamStarted}\n      >\n        {isStartButtonDisabled ? <CircularProgress size={24} /> : \"Start\"}\n      </Button>\n      <Button\n        variant=\"contained\"\n        className={classes.actionButton}\n        onClick={handleOnStop}\n        disabled={isStopButtonDisabled || !isStreamStarted}\n      >\n        {isStopButtonDisabled ? <CircularProgress size={24} /> : \"Stop\"}\n      </Button>\n    </div>\n  );\n};\n\nexport default ButtonBar;\n","import React, { useState, useEffect } from \"react\";\nimport { ToggleButton, ToggleButtonGroup } from \"@material-ui/lab\";\nimport { makeStyles } from \"@material-ui/core\";\n\nconst useStyles = makeStyles({\n  actionButton: {\n    backgroundColor: \"#fff\",\n    width: \"9rem\",\n    boxShadow: \"none\",\n    border: \"1px solid rgb(169,169,169)\",\n  },\n});\n\nexport default function ChartFilters({ setChartFilter }) {\n  const [selected, setSelected] = useState(\"week\");\n  const classes = useStyles();\n\n  useEffect(() => {\n    setChartFilter(selected);\n  }, [selected]);\n\n  return (\n    <ToggleButtonGroup\n      value={selected}\n      exclusive\n      onChange={(e, value) => setSelected(value)}\n      aria-label=\"text alignment\"\n      style={{ margin: \"15px 0px\" }}\n    >\n      <ToggleButton value=\"week\" className={classes.actionButton}>\n        Week\n      </ToggleButton>\n      <ToggleButton value=\"month\" className={classes.actionButton}>\n        Month\n      </ToggleButton>\n      <ToggleButton value=\"year\" className={classes.actionButton}>\n        Year\n      </ToggleButton>\n      {/* <ToggleButton value=\"all\" className={classes.actionButton}>\n        All\n      </ToggleButton> */}\n    </ToggleButtonGroup>\n  );\n}\n","const config = {\n    gdnURL: \"https://tushar.eng.macrometa.io\",\n    apiKey: \"hitachi_gmail.com.hitachi_demo.VpK6C4aIszkTM2lItx4g8vpwFmdR65Eiw1h8iYtyenUWdlK74TgSYr6yT0egkqpo3cfb22\",\n};\n\nexport default config;\n","const MAINTENANCE_CENTER = \"maintenance_centers\"\nconst UNPLANNED_MAINTENANCE = \"unplanned_maintenance\"\nconst PLANNED_MAINTENANCE = \"planned_maintenance\"\nconst TELEMATICS = \"telematics\"\nconst ISSUE_COUNTS = \"issue_counts\"\nconst AREA_ISSUE_COUNTS = \"area_issue_counts\"\nconst FLEET_STATS = \"fleet_stats\"\nconst VEHICLE_ISSSUE_COUNTS = \"vehicle_issue_counts\"\n\nconst LOAD_MAINTENANCE_CENTER = \"load_maintenance_centers\"\nconst LOAD_PLANNED_MAINTENANCE = \"load_planned_maintenance\"\nconst LOAD_TELEMATICS = \"load_telematics\"\nconst LOAD_AREA_ISSIE_COUNTS = \"load_area_issue_counts\"\nconst LOAD_ISSSUE_COUNTS = \"load_issue_counts\"\nconst LOAD_VEHICLE_ISSSUE_COUNTS = \"load_vehicle_issue_counts\"\nconst LOAD_FLEET_STATS_COUNTS = \"load_fleet_stats_counts\"\n\nexport const ON_READY = \"on_ready\"\n\nexport const GET_TELEMATICS_30_DAYS = \"get_telematics_30_days\"\nexport const GET_TOP5_MAINTENANCE_CENTERS_FOR_CITY = \"get_top5_maintenance_centers_for_city\"\nexport const GET_ASSET_DETAILS = \"get_asset_details\"\nexport const GET_TELEMATIC_INSIGHTS = \"get_telematic_insights\"\nexport const GET_FLEET_STATS = \"get_fleet_stats\"\nexport const GET_FLEET_STATS_CHART_DATA = \"get_fleet_stats_chart_data\"\nexport const INSERT_UNPLANNED_MAINTENANCE = \"insert_unplanned_maintenance\"\nexport const ENRICHTED_TELEMATICS =  \"enriched-telematics\"\n\nexport const COLLECTIONS = {\n  MAINTENANCE_CENTER,\n  PLANNED_MAINTENANCE,\n  TELEMATICS,\n};\n\nexport const LOAD_DATASETS = [\n  LOAD_MAINTENANCE_CENTER,\n  LOAD_PLANNED_MAINTENANCE,\n  LOAD_TELEMATICS,\n  LOAD_AREA_ISSIE_COUNTS,\n  LOAD_ISSSUE_COUNTS,\n  LOAD_VEHICLE_ISSSUE_COUNTS,\n  LOAD_FLEET_STATS_COUNTS\n]\n\nexport const TRUNCATE_DATASETS = [\n  MAINTENANCE_CENTER,\n  PLANNED_MAINTENANCE,\n  TELEMATICS,\n  UNPLANNED_MAINTENANCE,\n  ISSUE_COUNTS,\n  AREA_ISSUE_COUNTS,\n  FLEET_STATS,\n  VEHICLE_ISSSUE_COUNTS\n]\n\nexport const RESTQL = {\n  GET_TELEMATICS_30_DAYS,\n  GET_TOP5_MAINTENANCE_CENTERS_FOR_CITY,\n  GET_ASSET_DETAILS\n}\n\nexport const STREAM_WORKERS =  [\n  \"insights-worker\",\n  \"fleet-stats-worker\",\n  \"telematics-worker\",\n  \"telematics-simulator\",\n]\n","import jsC8 from \"jsc8\";\nimport config from \"../services/config\";\nimport * as R from 'ramda';\nimport {\n  GET_TOP5_MAINTENANCE_CENTERS_FOR_CITY,\n  GET_TELEMATICS_30_DAYS,\n  GET_TELEMATIC_INSIGHTS,\n  GET_ASSET_DETAILS,\n  INSERT_UNPLANNED_MAINTENANCE,\n  STREAM_WORKERS,\n  GET_FLEET_STATS,\n  GET_FLEET_STATS_CHART_DATA,\n} from \"../util/constants\";\n\nconst jsc8Client = new jsC8({\n  url: config.gdnURL,\n  apiKey: `${config.apiKey}`,\n});\n\nconst getDataset1 = R.pluck('Critical_Status');\nconst getDataset2 = R.pluck('Attention_Required');\n\n\nexport const maintenanceCenterList = async (city = \"London\") => {\n  try {\n    const { result } = await jsc8Client.executeRestql(\n      GET_TOP5_MAINTENANCE_CENTERS_FOR_CITY,\n      { City: city }\n    );\n    return result;\n  } catch (error) {\n    console.error(error);\n    throw error\n  }\n};\n\nexport const telematicList = async () => {\n  try {\n    const { result } = await jsc8Client.executeRestql(GET_TELEMATICS_30_DAYS);\n    return result;\n  } catch (error) {\n    console.error(error);\n    throw error\n  }\n};\n\nexport const assetDetails = async (Asset) => {\n  try {\n    const { result } = await jsc8Client.executeRestql(GET_ASSET_DETAILS,{Asset});\n    return result;\n  } catch (error) {\n    console.error(error);\n    throw error\n  }\n};\n\nexport const processBooking = async (payload) => {\n  try {\n    const { result } = await jsc8Client.executeRestql(INSERT_UNPLANNED_MAINTENANCE, payload);\n    return result;\n  } catch (error) {\n    console.error(error);\n    throw error\n  }\n};\n\nexport const insightList = async () => {\n  try {\n    const { result } = await jsc8Client.executeRestql(GET_TELEMATIC_INSIGHTS);\n    const [data] = result;\n    return data;\n  } catch (error) {\n    console.error(error);\n    throw error\n  }\n};\n\nexport const fleetStats = async () => {\n  try {\n    const { result } = await jsc8Client.executeRestql(GET_FLEET_STATS);\n    const [data] = result;\n    return data;\n  } catch (error) {\n    console.error(error);\n    throw error\n  }\n};\n\nexport const fleetChartData = async (filter = 'week') => {\n  try {\n    const tdata = {\n      week:{},\n      year:{},\n      month:{},\n      all:{}\n    };\n    let { result } = await jsc8Client.executeRestql(GET_FLEET_STATS_CHART_DATA);\n    if(result){\n      result = result.forEach(item=>{\n        if(item && item['last_week']) {\n          tdata['week']['dataset1'] = getDataset1(item['last_week']);\n          tdata['week']['dataset2'] = getDataset2(item['last_week']);\n          tdata['week']['label'] = R.pluck('Date')(item['last_week']);\n        }\n        if(item && item['last_month']) {\n          tdata['month']['dataset1'] = getDataset1(item['last_month']);\n          tdata['month']['dataset2'] = getDataset2(item['last_month']);\n          tdata['month']['label'] = R.pluck('Month')(item['last_month']);\n        }\n        if(item && item['last_year']) {\n          tdata['year']['dataset1'] = getDataset1(item['last_year']);\n          tdata['year']['dataset2'] = getDataset2(item['last_year']);\n          tdata['year']['label'] = R.pluck('Year')(item['last_year']);\n        }\n        // if(item && item['all']) {\n        //   tdata['all']['dataset1'] = getDataset1([item['all']]);\n        //   tdata['all']['dataset2'] = getDataset2([item['all']]);\n        // }\n      })\n    }\n    return tdata[filter]\n  } catch (error) {\n    console.error(error);\n    throw error\n  }\n};\n\n\nexport const startStopStream = async (start = false) => {\n  try {\n  let steamsArr = STREAM_WORKERS;\n  if(start === false){\n    steamsArr.reverse()\n  }\n  for (const element of steamsArr) {\n      await jsc8Client.activateStreamApp(element, start);\n    }\n    return true;\n  } catch (error) {\n    console.error(\"Failed start ot stop strams\", error.message);\n    return false;\n  }\n};\n\nexport const createStreamReader = async (streamName, filters) => {\n  let response;\n  try {\n      response = await jsc8Client.createStreamReader(\n          streamName,\n          `${streamName}-${Math.round(Math.random() * 1000)}`,\n          false,\n          false,\n          config.gdnURL.replace(\"https://\", \"\"),\n          { filters }\n      );\n  } catch (error) {\n      console.error(error);\n  }\n  return response;\n};","import { useEffect, useRef } from \"react\";\n\nconst useInterval = (callback, delay) => {\n    const savedCallback = useRef();\n\n    useEffect(() => {\n        savedCallback.current = callback;\n    }, [callback]);\n\n    useEffect(() => {\n        const tick = () => {\n            savedCallback.current();\n        };\n\n        if (delay !== null) {\n            let id = setInterval(tick, delay);\n            return () => clearInterval(id);\n        }\n    }, [delay]);\n};\n\nexport default useInterval;","import Chart from \"chart.js/auto\";\nimport React, { useEffect, useRef, useState } from \"react\";\nimport { Grid, makeStyles } from \"@material-ui/core\";\nimport LocalShippingIcon from \"@material-ui/icons/LocalShipping\";\nimport ChartFilters from \"./ChartFilters\";\nimport { fleetChartData } from \"../services/streams\";\nimport useInterval from \"../hooks/useInterval\";\n\n// LineChart\n\nconst useStyles = makeStyles({\n  root: {\n    flexDirection: \"column\",\n    display: \"flex\",\n  },\n  securitiesSelect: {\n    width: \"12rem\",\n  },\n  selectGrid: {\n    paddingBottom: \"1rem\",\n  },\n  selectLabel: {\n    paddingRight: \"1rem\",\n    fontSize: \"1.5rem\",\n  },\n  chartCanvas: {\n    height: \"19.5rem\",\n  },\n  heading: {\n    margin: \"10px\",\n    fontSize: \"28px\",\n    fontWeight: 400,\n  },\n});\n\nconst LineChart = () => {\n  const canvasRef = useRef(null);\n  const classes = useStyles();\n  const [chartFilter, setChartFilter] = useState(\"week\");\n  const [chartData, setChartData] = useState({});\n\n  const initFleetChartData = async(filter) => {\n    const result = await fleetChartData(filter);\n    setChartData(result);\n  }\n\n  useEffect(() => {\n    initFleetChartData(chartFilter)\n  }, [chartFilter]);\n\n  useInterval(()=>{\n    initFleetChartData(chartFilter);\n  }, 10000);\n\n  useEffect(() => {\n    const ch = initChart(chartData);\n    return () => {\n      ch.destroy();\n    };\n  }, [canvasRef.current, chartData]);\n\n  const initChart = (data) => {\n    const myChart = new Chart(canvasRef.current, {\n      type: \"line\",\n      options: {\n        maintainAspectRatio: false,\n        plugins: {\n          legend: {\n            display: false,\n          },\n        },\n        elements: {\n          point: {\n            radius: 1,\n          },\n        },\n        scales: {\n          x: {\n              grid: {\n                  display: false,\n              },\n              // ticks: {\n              //     autoSkip: false,\n              // },\n          },\n          y: {\n              grid: {\n                  display: false,\n              },\n              // ticks: {\n              //     autoSkip: false,\n              // },\n          },\n      },\n      },\n      data: {\n        labels: data.label,\n        datasets: [\n          {\n            label: \" Critical\",\n            data: data.dataset1,\n            borderColor: \"red\",\n            borderWidth: 2,\n          },\n          {\n            label: \" Attention\",\n            data: data.dataset2,\n            borderColor: \"#d0d00f\",\n            borderWidth: 2,\n          },\n        ],\n      },\n    });\n    return myChart;\n  };\n\n  return (\n    <>\n      <div className={classes.root}>\n        <Grid container alignItems=\"center\">\n          <Grid item>\n            <div style={{ display: \"flex\" }}>\n              <LocalShippingIcon style={{ fontSize: 50 }} />\n              <h3 className={classes.heading}> Fleet Status</h3>\n            </div>\n          </Grid>\n        </Grid>\n        <div className={classes.chartCanvas}>\n          <canvas ref={canvasRef} />\n        </div>\n        <ChartFilters setChartFilter={setChartFilter} />\n      </div>\n    </>\n  );\n};\n\nexport default LineChart;\n","import React, { useState, useEffect } from \"react\";\nimport {\n  makeStyles,\n  Table,\n  TableBody,\n  TableCell,\n  TableContainer,\n  TableRow,\n  Paper,\n} from \"@material-ui/core\";\nimport ArrowDropUpIcon from \"@material-ui/icons/ArrowDropUp\";\nimport ArrowDropDownIcon from \"@material-ui/icons/ArrowDropDown\";\nimport { fleetStats } from \"../../services/streams\";\nimport useInterval from \"../../hooks/useInterval\";\n\nconst useStyles = makeStyles({\n  tableCell: {\n    padding: \"1.9px 10px\",\n    border: \"1px solid\",\n  },\n});\n\nexport default function FleetStatusTable() {\n  const classes = useStyles();\n  const [data, setData] = useState({});\n  const initFleetStats = async () => {\n    try {\n      const result = await fleetStats();\n      setData(result);\n    } catch (error) {\n      console.error(\"falied to load the insigths\", error.message);\n    }\n  };\n  useEffect(() => {\n    initFleetStats();\n  }, []);\n\n  useInterval(initFleetStats, 3000);\n\n  const tdata = {\n    Attention_Required: (\n      <>\n        Attention required <br /> (Next 7 days)\n      </>\n    ),\n    Critical_Status: (\n      <>\n        Critical Status <br /> (Next 7 days)\n      </>\n    ),\n    Fleet_Health: (\n      <>\n        Fleet Health <br /> (Last 7 days)\n      </>\n    ),\n    Unplanned_Maintenance: (\n      <>\n        Unplanned Maintenance <br /> (Last 7 days)\n      </>\n    ),\n    Planned_Maintenance: (\n      <>\n        Planned Maintenance <br /> (Next 7 days)\n      </>\n    ),\n  };\n\n  return (\n    <TableContainer component={Paper}>\n      <Table className={classes.table} aria-label=\"custom pagination table\">\n        <TableBody>\n          {Object.keys(tdata) &&\n            Object.keys(tdata).map((key, i) => (\n              <TableRow key={Math.random()}>\n                <TableCell className={classes.tableCell}>\n                  {tdata[key]}\n                </TableCell>\n                <TableCell\n                  className={classes.tableCell}\n                  style={{ width: \"50px\" }}\n                >\n                  {data && data[key] && data[key].arrow === \"Up\" ? (\n                    <ArrowDropUpIcon style={{ fontSize: 50 }} />\n                  ) : (\n                    <ArrowDropDownIcon style={{ fontSize: 50 }} />\n                  )}\n                </TableCell>\n                <TableCell className={classes.tableCell}>\n                  {(key === 'Fleet_Health') ? '-' : \n                  <b\n                    style={{\n                      color: `${\n                        data && data[key] && data[key].arrow === \"Up\"\n                          ? \"green\"\n                          : \"red\"\n                      }`,\n                    }}\n                  >\n                    {data && data[key] && data[key][key]}\n                  </b>\n                  }\n                </TableCell>\n              </TableRow>\n            ))}\n        </TableBody>\n      </Table>\n    </TableContainer>\n  );\n}\n","import React, { useEffect, useState } from \"react\";\nimport {\n  makeStyles,\n  Table,\n  TableBody,\n  TableCell,\n  TableContainer,\n  TableRow,\n  Paper,\n} from \"@material-ui/core\";\nimport { insightList } from \"../../services/streams\";\nimport useInterval from \"../../hooks/useInterval\";\n\nconst useStyles = makeStyles({\n  tableCell: {\n    padding: \"0.7rem\",\n    border: \"1px solid\",\n  },\n  heading: {\n    margin: \"10px\",\n    fontSize: \"28px\",\n    fontWeight: 400,\n  },\n});\n\nconst tdata = {\n  Vehicle_With_Most_Frequent_Issues: \"Vechicle with most frequent issue\",\n  Most_Common_Alert: \"Most Common Alert\",\n  Total_Cost_Of_Unplanned_Maintenance: \"Total Cost of Unplanned Maintenance\",\n  Area_With_Most_Alerts: \"Area with most Alerts\",\n  Least_Cost_Effective_Vehicle: \"Least Cost Effective Vehicle\",\n};\n\nexport default function InsightsTable() {\n  const classes = useStyles();\n  const [data, setData] = useState({});\n  const initInsightList = async () => {\n    try {      \n      const result = await insightList();\n      setData(result);\n    } catch (error) {\n      console.error('falied to load the insigths', error.message);\n    }\n  };\n  useEffect(() => {\n    initInsightList();\n  }, []);\n  useInterval(initInsightList, 3000);\n  return (\n    <>\n      <div style={{ display: \"flex\", marginBottom: \"10px\" }}>\n        <span\n          className=\"fab fa-searchengin\"\n          style={{ fontSize: 40, marginTop: \"10px\" }}\n        ></span>\n        <h3 className={classes.heading}> Insights</h3>\n      </div>\n      <TableContainer component={Paper}>\n        <Table className={classes.table} aria-label=\"custom pagination table\">\n          <TableBody>\n            {Object.keys(tdata) &&\n              Object.keys(tdata).map((key) => (\n                <TableRow key={Math.random()}>\n                  <TableCell className={classes.tableCell}>\n                    {tdata[key]}\n                  </TableCell>\n                  <TableCell className={classes.tableCell}>\n                    {data && data.hasOwnProperty(key) && data[key]}\n                  </TableCell>\n                  <TableCell className={classes.tableCell}>\n                    investigate\n                  </TableCell>\n                </TableRow>\n              ))}\n          </TableBody>\n        </Table>\n      </TableContainer>\n    </>\n  );\n}\n","import moment from \"moment\";\n\nexport const activeButtonClass = {\n  backgroundColor: \"#4b81c3\",\n  width: \"9rem\",\n  boxShadow: \"none\",\n  border: \"1px solid rgb(169,169,169)\",\n  color: \"#ffffff\",\n  borderRadius: 0,\n  \"&:hover\": {\n    backgroundColor: \"#4b81c3\",\n    color: \"#ffffff\",\n  },\n};\n\nexport const slicer = (arr, size) => {\n  var i,\n    j,\n    temparr = [],\n    chunk = size;\n  for (i = 0, j = arr.length; i < j; i += chunk) {\n    temparr.push(arr.slice(i, i + chunk));\n  }\n  return temparr;\n};\n\nexport const formatDate = (date) => {\n  var a = moment(date);\n  var b = moment();\n  return a.from(b); // \"a day ago\"\n};\n\nexport const printDate = (date) => {\n  if (date) return moment(date).format(\"D MMM YYYY\");\n  return;\n};\n\nexport const getRand = () => Math.floor(1000000 + Math.random() * 900000);\n\nexport const parseMessage = (msg) => {\n  const encodedMessage = JSON.parse(msg).payload;\n  const messageId = JSON.parse(msg).messageId;\n  const decodedMessage = atob(encodedMessage);\n\n  if (decodedMessage.length === 0) {\n    return { newData: {}, messageId };\n  }\n  const newData = JSON.parse(decodedMessage);\n  return { newData, messageId };\n};\n","import React, { useState, useEffect } from \"react\";\nimport { makeStyles, Button } from \"@material-ui/core\";\nimport { activeButtonClass } from \"../../services/util\";\n\nconst useStyles = makeStyles((theme) => ({\n  actionButton: {\n    backgroundColor: \"#ffffff\",\n    width: \"9rem\",\n    boxShadow: \"none\",\n    border: \"1px solid rgb(169,169,169)\",\n    borderRadius: 0\n  },\n  activeActionButton: activeButtonClass,\n  root: {\n    display: 'flex',\n    \"& > *\": {\n      marginRight: theme.spacing(2),\n      marginTop: \"0.6rem\",\n      flex: 1\n    },\n  },\n}));\n\nexport default function AlertFilters({stats, setAlterFilter}) {\n  const classes = useStyles();\n  const [selected, setSelected] = useState(\"all\");\n  const { all, critical, attention, booked } = stats;\n  const computeClass = (val) =>\n    `${selected === val ? classes.activeActionButton : classes.actionButton}`;\n\n  useEffect(()=>{\n    setAlterFilter(selected);\n  },[selected])\n\n  return (\n    <>\n      <div className={classes.root}>\n        <Button\n          variant=\"outlined\"\n          onClick={() => setSelected(\"all\")}\n          className={computeClass(\"all\")}\n        >\n          All ({all})\n        </Button>\n        <Button\n          variant=\"outlined\"\n          onClick={() => setSelected(\"critical\")}\n          className={computeClass(\"critical\")}\n        >\n          Critical ({critical})\n        </Button>\n        <Button\n          variant=\"outlined\"\n          onClick={() => setSelected(\"attention\")}\n          className={computeClass(\"attention\")}\n        >\n          Attention ({attention})\n        </Button>\n        <Button\n          variant=\"outlined\"\n          onClick={() => setSelected(\"booked\")}\n          className={computeClass(\"booked\")}\n        >\n          Booked ({booked})\n        </Button>\n      </div>\n    </>\n  );\n}\n","import React, { useEffect, useRef } from \"react\";\nimport { Button, makeStyles } from \"@material-ui/core\";\nimport { activeButtonClass } from \"../services/util\";\n\nconst useStyles = makeStyles((theme) => ({\n  activeActionButton: { ...activeButtonClass, width: \"5rem\" },\n  root: {\n    \"& > *\": {\n      margin: theme.spacing(1),\n    },\n  },\n}));\n\nconst DatePicker = (props) => {\n  const datepickerContainer = useRef();\n  const classes = useStyles();\n\n  useEffect(() => {\n    window.$(datepickerContainer.current).datepicker({\n      onSelect: function (date) {\n        props.onDateChange(date);\n      },\n      defaultDate: props.initialDate,\n    });\n    return () => {\n      window.$(datepickerContainer.current).datepicker(\"destroy\");\n    };\n  }, []);\n\n  return (\n    <>\n      <input\n        ref={datepickerContainer}\n        style={{ visibility: \"hidden\", width: 0 }}\n      />\n      <Button\n        variant=\"contained\"\n        color=\"primary\"\n        style={{padding:'0px'}}\n        className={classes.activeActionButton}\n        onClick={() => window.$(datepickerContainer.current).datepicker(\"show\")}\n      >\n        Select\n      </Button>\n      {/* {props.initialDate} */}\n    </>\n  );\n};\n\nexport default DatePicker;\n","import React, { useState, useEffect } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport {\n  Table,\n  TableBody,\n  TableCell,\n  TableContainer,\n  TableHead,\n  TableRow,\n  Paper,\n  Typography,\n} from \"@material-ui/core\";\nimport DatePicker from \"../DatePicker\";\nimport { maintenanceCenterList } from '../../services/streams'\n\nconst useStyles = makeStyles({\n  table: {\n    minWidth: 650,\n  },\n  root: {\n    // paddingTop: \"1rem\",\n  },\n  pagination: {\n    borderRadius: \"none\",\n  },\n});\n\nexport default function ModalTable({handleSelect, alertData}) {\n  const classes = useStyles();\n  const [selectedDate, ] = useState(\"06/15/2021\");\n  const [data, setData] = useState([]);\n\n  const initMaintenanceCenterList = async(city) => {\n    try {      \n      const results = await maintenanceCenterList(city);\n      setData(results)\n    } catch (error) {\n      console.error('falied to load maintenace centers', error.message)\n    }\n  }\n\n  useEffect(()=>{\n    const { City } = alertData;\n    initMaintenanceCenterList(City);\n  },[])\n\n  return (\n    <>\n      <Typography component={\"div\"} className={classes.root}>\n        <TableContainer component={Paper}>\n          <Table className={classes.table} aria-label=\"simple table\">\n            <TableHead>\n              <TableRow>\n                <TableCell>Maintenance Center</TableCell>\n                <TableCell align=\"center\">Rating</TableCell>\n                <TableCell align=\"center\">City</TableCell>\n                <TableCell align=\"center\">Estimated Time</TableCell>\n                <TableCell align=\"center\">Estimated Cost</TableCell>\n                <TableCell align=\"center\">Select</TableCell>\n              </TableRow>\n            </TableHead>\n            <TableBody>\n              {data &&\n                data.map((row, i) => (\n                  <TableRow\n                    key={Math.random()}\n                    style={i % 2 ? { background: \"rgb(208 225 243)\" } : {}}\n                  >\n                    <TableCell align=\"center\">\n                      {row.Name}\n                    </TableCell>\n                    <TableCell align=\"center\">{row.Rating}/5.0</TableCell>\n                    <TableCell align=\"center\">{row.City}</TableCell>\n                    <TableCell align=\"center\">{row.Estimated_Time}  {row.Estimated_Time === 1? 'Day': 'Days'}</TableCell>\n                    <TableCell align=\"center\">${row.Estimated_Cost}</TableCell>\n                    <TableCell align=\"center\">\n                      <DatePicker\n                        key={Math.random()}\n                        onDateChange={(date) => {\n                          handleSelect({date, maintenaceData:row})\n                        }}\n                        initialDate={selectedDate}\n                      />\n                    </TableCell>\n                  </TableRow>\n                ))}\n            </TableBody>\n          </Table>\n        </TableContainer>\n      </Typography>\n    </>\n  );\n}\n","import React, { useState, useEffect } from \"react\";\nimport {\n  Dialog,\n  DialogContent,\n  DialogContentText,\n  DialogTitle,\n} from \"@material-ui/core\";\nimport ModalTable from \"./tables/ModalTable\";\nimport CancelPresentationIcon from \"@material-ui/icons/CancelPresentation\";\n\nlet closeImg = {\n  cursor: \"pointer\",\n  float: \"right\",\n  marginTop: \"5px\",\n  width: \"50px\",\n};\n\nexport default function ModalComponent(props) {\n  const { openModal, closeModal, handleSelect } = props;\n  const [open, setOpen] = React.useState(false);\n  const [modalData, setModalData] = useState({\n    status: false,\n    data: {},\n  });\n\n  useEffect(() => {\n    setOpen(openModal.status);\n    setModalData(openModal.data);\n  }, [openModal.status]);\n\n  const handleClose = () => {\n    setOpen(false);\n    closeModal();\n  };\n\n  const handleSelectDate = (data) => {\n    setOpen(false);\n    closeModal();\n    handleSelect({ ...data, _key: modalData._key, data: modalData });\n  };\n  const { Asset } = modalData;\n  return (\n    <React.Fragment>\n      <Dialog\n        fullWidth={true}\n        maxWidth=\"md\"\n        open={open}\n        onClose={handleClose}\n        aria-labelledby=\"max-width-dialog-title\"\n      >\n        <DialogTitle id=\"max-width-dialog-title\">\n          {Asset}\n          <CancelPresentationIcon\n            fontSize=\"large\"\n            onClick={handleClose}\n            style={closeImg}\n          />\n        </DialogTitle>\n        <DialogContent>\n          <DialogContentText>\n            <ModalTable alertData={modalData} handleSelect={(data) => handleSelectDate(data)} />\n          </DialogContentText>\n        </DialogContent>\n      </Dialog>\n    </React.Fragment>\n  );\n}\n","import React, { useState, useEffect } from \"react\";\nimport {\n  makeStyles,\n  Table,\n  TableBody,\n  TableCell,\n  TableContainer,\n  TableRow,\n  TableHead,\n  Paper,\n  Button,\n} from \"@material-ui/core\";\nimport Pagination from \"@material-ui/lab/Pagination\";\nimport NotificationsActiveIcon from \"@material-ui/icons/NotificationsActive\";\nimport AlertFilters from \"./AlertFilters\";\nimport ModalComponent from \"../ModalComponent\";\nimport {\n  activeButtonClass,\n  slicer,\n  formatDate,\n  printDate,\n  getRand,\n} from \"../../services/util\";\nimport { telematicList, assetDetails, processBooking } from \"../../services/streams\";\n\nconst useStyles = makeStyles({\n  table: {\n    minWidth: 650,\n  },\n  root: {\n    paddingTop: \"1rem\",\n  },\n  pagination: {\n    borderRadius: \"none\",\n  },\n  activeActionButton: { ...activeButtonClass, width: \"4rem\" },\n  heading: {\n    margin: \"10px\",\n    fontSize: \"28px\",\n    fontWeight: 400,\n  },\n});\n\nexport default function AlertsTable({alertsData}) {\n  const classes = useStyles();\n  const [openModal, setOpenModal] = useState({ status: false, data: {} });\n  const [alertStats, setAlertStats] = useState({\n    all: 0,\n    critical: 0,\n    attention: 0,\n    booked: 0,\n  });\n  const [alertFilter, setAlterFilter] = useState(\"all\");\n  const [fdata, setFData] = useState([]);\n  const [odata, setOData] = useState([]);\n  const [tdata, setTData] = useState([]);\n  const [page, setPage] = React.useState(1);\n  const handleChange = (event, value) => {\n    setPage(value);\n  };\n\n  const initTelematicList = async () => {\n    try {\n      const results = await telematicList();\n      setOData(results);\n    } catch (error) {\n      console.error(\"falied to load maintenace centers\", error.message);\n    }\n  };\n\n  const initAssetDetails = async (data) => {\n    try {\n      const { Asset, Fault } = data.data;\n      const { date, maintenaceData } = data;\n      const [asetDetail] = await assetDetails(Asset);\n      const { Driver, Vehicle_Model } = asetDetail;\n      const { Estimated_Cost: Work_Cost } = maintenaceData;\n      const tdate = new Date(date);\n      const payload = {\n        Asset,\n        Booked_In: tdate.toISOString(),\n        Invoice_Number: getRand(),\n        Cost_Center: getRand(),\n        Vehicle_Model,\n        Driver,\n        Work_Description: Fault,\n        Work_Cost,\n      };\n      await processBooking(payload);\n      console.log(\"successfully booking processed!\");\n    } catch (error) {\n      console.error('Failed to book maintenance', error.message);\n    }\n  };\n\n  const handleBooking = (data) => {\n    let tdata = odata.map((item) => {\n      if (item._key === data._key) {\n        item.Maintenance_Planned = \"Yes\";\n        const date = new Date(data.date);\n        item.Booked_In = date.toISOString();\n      }\n      return item;\n    });\n    setOData(tdata);\n    initAssetDetails(data);\n  };\n\n  useEffect(() => {\n    initTelematicList();\n  }, []);\n\n  useEffect(() => {\n    let data = odata.filter((item) => {\n      let filter = alertFilter.toLowerCase();\n      if (filter === \"all\") return true;\n      if (filter === \"booked\") {\n        return item.Maintenance_Planned.toLowerCase() === \"yes\";\n      } else {\n        return item.Status_Level.toLowerCase() === filter;\n      }\n    });\n    const tempData = slicer(data, 8);\n    setFData(tempData);\n    setTData(tempData[(page - 1) | 0]);\n    setPage(1);\n  }, [alertFilter, odata]);\n\n  useEffect(() => {\n    setTData(fdata[page - 1]);\n  }, [page]);\n\n  useEffect(()=>{\n    const [ data = {} ] = alertsData;\n    if(data && Object.keys(data).length > 0){\n      data._key = getRand();\n      if(odata.length === 0) {\n        initTelematicList();\n      }\n      setOData([data, ...odata]);\n    }\n  },[alertsData])\n\n  useEffect(() => {\n    let stats = { all: odata.length, critical: 0, attention: 0, booked: 0 };\n    odata.forEach((item) => {\n      if (item.Maintenance_Planned.toLowerCase() === \"yes\") stats.booked += 1;\n      if (item.Status_Level.toLowerCase() === \"critical\") stats.critical += 1;\n      if (item.Status_Level.toLowerCase() === \"attention\") stats.attention += 1;\n    });\n    setAlertStats(stats);\n  }, [odata]);\n\n  return (\n    <>\n      <div style={{ display: \"flex\" }}>\n        <NotificationsActiveIcon style={{ fontSize: 50 }} />\n        <h3 className={classes.heading}>Alerts</h3>\n      </div>\n      <AlertFilters stats={alertStats} setAlterFilter={setAlterFilter} />\n      <div className={classes.root}>\n        <TableContainer component={Paper}>\n          <Table className={classes.table} aria-label=\"simple table\">\n            <TableHead>\n              <TableRow>\n                <TableCell style={{ width: \"5rem\" }}>Vechicle ID</TableCell>\n                <TableCell align=\"center\">Alert &nbsp; Description</TableCell>\n                <TableCell align=\"center\">Date &nbsp; Logged</TableCell>\n                <TableCell align=\"center\">Status level</TableCell>\n                <TableCell align=\"center\">Maintenance &nbsp; Planned</TableCell>\n                <TableCell align=\"center\" style={{ width: \"5rem\" }}>\n                  Action\n                </TableCell>\n              </TableRow>\n            </TableHead>\n            <TableBody>\n              {tdata &&\n                tdata.map((row, i) => (\n                  <TableRow\n                    key={Math.random()}\n                    style={i % 2 ? { background: \"rgb(208 225 243)\" } : {}}\n                  >\n                    <TableCell align=\"center\">{row.Asset}</TableCell>\n                    <TableCell align=\"center\">{row.Fault}</TableCell>\n                    <TableCell align=\"center\">\n                      {formatDate(row.Timestamp)}\n                    </TableCell>\n                    <TableCell\n                      align=\"center\"\n                      style={{\n                        color: `${\n                          row.Status_Level === \"Critical\" ? \"red\" : \"\"\n                        }`,\n                      }}\n                    >\n                      {row.Status_Level}\n                    </TableCell>\n                    <TableCell align=\"center\">\n                      {row.Maintenance_Planned}\n                    </TableCell>\n                    <TableCell align=\"center\">\n                      {row.Maintenance_Planned.toLowerCase() === \"yes\" ? (\n                        <>\n                        Booked\n                        <br/>\n                        {printDate(row.Booked_In)}\n                        </>\n                      ) : (\n                        <Button\n                          variant=\"contained\"\n                          color=\"primary\"\n                          className={classes.activeActionButton}\n                          style={{ padding: \"0px\" }}\n                          onClick={() =>\n                            setOpenModal({ status: true, data: row })\n                          }\n                        >\n                          Book\n                        </Button>\n                      )}\n                    </TableCell>\n                  </TableRow>\n                ))}\n            </TableBody>\n          </Table>\n          <Pagination\n            className={classes.pagination}\n            count={fdata.length}\n            showFirstButton\n            showLastButton\n            page={page}\n            onChange={handleChange}\n          />\n        </TableContainer>\n        <ModalComponent\n          openModal={openModal}\n          closeModal={() => setOpenModal({ status: false, data: { id: 0 } })}\n          handleSelect={(data) => handleBooking(data)}\n        />\n      </div>\n    </>\n  );\n}\n","import jsC8 from \"jsc8\";\nimport config from \"../services/config\";\nimport { TRUNCATE_DATASETS, LOAD_DATASETS, ON_READY } from \"../util/constants\";\nimport { startStopStream  } from \"./streams\";\n\nconst jsc8Client = new jsC8({\n  url: config.gdnURL,\n  apiKey: `${config.apiKey}`,\n});\n\nexport const intialize = async (callback) => {\n  try {\n    await startStopStream();\n    await truncateCollections();\n    await loadDataCollections();\n    await onReady();\n    callback(false);\n  } catch (error) {\n    console.error(\"Failed to intialize\", error.message);\n    callback(false);\n  }\n};\n\nconst truncateCollections = async () => {\n  try {\n    const promises = TRUNCATE_DATASETS.map((collection) =>\n      jsc8Client.collection(collection).truncate()\n    );\n    await Promise.all(promises);\n  } catch (error) {\n    console.error(\"Failed to truncate\", error.message);\n  }\n};\n\nconst loadDataCollections = async () => {\n  try {\n    const promises = LOAD_DATASETS.slice(0,2).map(\n      (collection) => jsc8Client.executeRestql(collection)\n    );\n    await Promise.all(promises);\n    await jsc8Client.executeRestql(LOAD_DATASETS[2]);\n    const tpromises = LOAD_DATASETS.slice(3).map(\n      (collection) => jsc8Client.executeRestql(collection)\n    );\n    await Promise.all(tpromises);\n  } catch (error) {\n    console.error(\"Failed to load\", error.message);\n  }\n};\n\nconst onReady = async () => {\n  try {\n    await jsc8Client.executeRestql(ON_READY);\n  } catch (error) {\n    console.error(\"Failed to onReady\", error.message);\n  }\n};\n","import React, { useState } from \"react\";\nimport { Container, makeStyles, Grid } from \"@material-ui/core\";\nimport Header from \"./Header\";\nimport ButtonBar from \"./ButtonBar\";\nimport LineChart from \"./LineChart\";\nimport FleetStatusTable from \"./tables/FleetStatusTable\";\nimport InsightsTable from \"./tables/InsightsTable\";\nimport AlertsTable from \"./tables/AlertsTable\";\nimport { intialize } from \"../services/restql\";\nimport { startStopStream, createStreamReader } from \"../services/streams\";\nimport { parseMessage } from \"../services/util\";\nimport { ENRICHTED_TELEMATICS } from \"../util/constants\";\n\nconst useStyles = makeStyles({\n  root: {\n    padding: \"0.5rem\",\n  },\n  section: {\n    paddingRight: \"2rem\",\n  },\n  aboutButton: {\n    top: \"1.1rem\",\n    right: \"2rem\",\n    position: \"absolute\",\n    backgroundColor: \"rgb(208 225 243)\",\n    boxShadow: \"none\",\n    border: \"1px solid rgb(169,169,169)\",\n  },\n});\n\nconst Dashboard = () => {\n  const classes = useStyles();\n  const [isStreamStarted, setIsStreamStarted] = useState(false);\n  const [isLoading, setIsLoading] = useState(false);\n  const [isStopLoading, setIsStopLoading] = useState(false);\n  const [isIntializeLoading, setIsIntializeLoading] = useState(false);\n  const [streamConnections, setStreamConnections] = useState([]);\n  const [alertsData, setAlertsData] = useState([]);\n\n  //button callback for all the rest\n  const handleOnStart = () => {\n    console.log(\"starting streams...\");\n    setIsLoading(true);\n    startStreamAndWebSocket();\n    console.log(\"started streams!\");\n  };\n  const handleOnStop = () => {\n    console.log(\"stoping intialized...\");\n    setIsStopLoading(true);\n    closeStreamAndWebSocket();\n    console.log(\"stoped intialized!\");\n  };\n  const handleOnIntialize = async () => {\n    console.log(\"starting intialized...\");\n    setIsIntializeLoading(true);\n    await intialize(setIsIntializeLoading);\n    console.log(\"started intialized!\");\n  };\n\n  const closeStreamAndWebSocket = async () => {\n    try {\n      for (const elements of streamConnections) {\n        await elements.terminate();\n      }\n      const response = await startStopStream();\n      if (response) {\n        setIsStreamStarted(false);\n      }\n      setIsStopLoading(false);\n    } catch (error) {\n      console.error(\"Failed to close steam and webscoker\", error.message);\n    }\n  };\n\n  const startStreamAndWebSocket = async () => {\n    try {\n      const response = await startStopStream(true);\n      if (response) {\n        const alertsStreamConnection = await establishConnectionForFree(\n          ENRICHTED_TELEMATICS\n        );\n        setStreamConnections((prev) => [\n          ...streamConnections,\n          alertsStreamConnection,\n        ]);\n        setIsStreamStarted(true);\n      }\n      setIsLoading(false);\n    } catch (error) {\n      console.error(\"Failed to close steam and webscoket\", error.message);\n    }\n  };\n\n  const establishConnectionForFree = async (streamName) => {\n    try {\n      const _consumer = await createStreamReader(streamName);\n      _consumer.on(\"open\", () =>\n        console.log(`Connection open for ${streamName}`)\n      );\n      _consumer.on(\"error\", (error) =>\n        console.error(`Connection error for ${streamName}`, error)\n      );\n      _consumer.on(\"close\", () =>\n        console.log(`Connection close for ${streamName}`)\n      );\n\n      _consumer.on(\"message\", (message) => {\n        _consumer.send(\n          JSON.stringify({ messageId: JSON.parse(message).messageId })\n        );\n\n        messageManipulation(message, ENRICHTED_TELEMATICS);\n      });\n      return _consumer;\n    } catch (error) {\n      console.error(\"error\", error);\n    }\n  };\n\n  const messageManipulation = (message, streamName) => {\n    let tempArr = [];\n    const { newData } = parseMessage(message);\n    if (!newData) {\n      return;\n    }\n    tempArr.push(newData);\n    setAlertsData([...alertsData, ...tempArr]);\n  };\n\n  return (\n    <>\n      <Container className={classes.root} maxWidth={false}>\n        <Header\n          handleOnIntialize={handleOnIntialize}\n          isIntializeButtonDisabled={isIntializeLoading}\n        />\n        <ButtonBar\n          handleOnStart={handleOnStart}\n          handleOnStop={handleOnStop}\n          isStartButtonDisabled={isLoading}\n          isStopButtonDisabled={isStopLoading}\n          isStreamStarted={isStreamStarted}\n        />\n        <Grid\n          container\n          direction=\"row\"\n          style={{ paddingTop: \"32px\" }}\n          alignItems=\"flex-start\"\n        >\n          <Grid item xs={6} className={classes.section}>\n            <Grid container direction=\"row\" alignItems=\"flex-start\">\n              <Grid item xs={6} className={classes.section}>\n                <LineChart />\n              </Grid>\n              <Grid\n                item\n                xs={6}\n                className={classes.section}\n                style={{ marginTop: \"4rem\" }}\n              >\n                <FleetStatusTable />\n              </Grid>\n              <Grid item xs={12} className={classes.section}>\n                <InsightsTable />\n              </Grid>\n            </Grid>\n          </Grid>\n          <Grid item xs={6} className={classes.section}>\n            <AlertsTable alertsData={alertsData} />\n          </Grid>\n        </Grid>\n      </Container>\n    </>\n  );\n};\n\nexport default Dashboard;\n","import { createMuiTheme, ThemeProvider } from \"@material-ui/core\";\nimport Dashboard from \"./app/components/Dashboard\";\n\nconst theme = createMuiTheme({\n  typography: {\n    fontFamily: \"Lato\",\n  },\n  overrides: {\n    MuiTableCell: {\n      root: {\n        padding: \"0.8rem\",\n      },\n      stickyHeader: {\n        backgroundColor: \"#d0e0f3\",\n      },\n      head: {\n        color: \"#ffffff\",\n        fontWeight: 900,\n      },\n    },\n    MuiTypography: {\n      root: {\n        fontWeight: \"600 !important\",\n      },\n    },\n    MuiButton: {\n      label: {\n        textTransform: \"capitalize\",\n        fontWeight: \"600\",\n      },\n    },\n    MuiFormControl: {\n      root: {\n        height: \"56px\",\n      },\n    },\n    MuiInputLabel: {\n      outlined: {\n        transform: \"translate(14px, 0.7rem) scale(1)\",\n      },\n    },\n    MuiOutlinedInput: {\n      input: {\n        padding: \"0.65rem 14px\",\n      },\n    },\n    MuiPaginationItem: {\n      root: {\n        borderRadius: \"0px\",\n      },\n      page: {\n        padding: \"25px\",\n        \"&$selected\": {\n          backgroundColor: \"#4b81c3\",\n          color: \"#ffffff\",\n          \"&:hover\": {\n            backgroundColor: \"#4b81c3\",\n            color: \"#ffffff\",\n          },\n        },\n        \"&:hover\": {\n          backgroundColor: \"#4b81c3\",\n          color: \"#ffffff\",\n        },\n      },\n    },\n    MuiToggleButton: {\n      root: {\n        \"&$selected\": {\n          backgroundColor: \"#4b81c3\",\n          color: \"#ffffff\",\n          \"&:hover\": {\n            backgroundColor: \"#4b81c3\",\n            color: \"#ffffff\",\n          },\n        },\n        \"&:hover\": {\n          backgroundColor: \"#4b81c3\",\n          color: \"#ffffff\",\n        },\n      },\n    },\n    MuiTableHead: {\n      root: {\n        backgroundColor: \"#4b81c3\",\n      },\n    },\n    MuiTableContainer: {\n      root: {\n        overflowX: \"inherit\",\n      },\n    },\n  },\n});\n\nconst App = () => {\n  return (\n    <>\n      <ThemeProvider theme={theme}>\n        <Dashboard />\n      </ThemeProvider>\n    </>\n  );\n};\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}