{"version":3,"sources":["app/components/Header.js","app/components/ButtonBar.js","app/components/ChartFilters.js","app/components/LineChart.js","app/components/tables/FleetStatusTable.js","app/services/config.js","app/util/constants.js","app/services/streams.js","app/hooks/useInterval.js","app/components/tables/InsightsTable.js","app/services/util.js","app/components/tables/AlertFilters.js","app/components/DatePicker.js","app/components/tables/ModalTable.js","app/components/ModalComponent.js","app/components/tables/AlertsTable.js","app/services/restql.js","app/components/Dashboard.js","App.js","reportWebVitals.js","index.js"],"names":["useStyles","makeStyles","header","fontWeight","aboutButton","top","right","position","backgroundColor","boxShadow","border","intializeButton","Header","handleOnIntialize","isIntializeButtonDisabled","classes","Grid","container","direction","justify","alignItems","Typography","variant","align","className","Button","onClick","CircularProgress","size","window","open","root","display","justifyContent","marginTop","actionButton","marginRight","width","ButtonBar","handleOnStart","handleOnStop","isStartButtonDisabled","isStopButtonDisabled","isStreamStarted","disabled","ChartFilters","setChartFilter","useState","selected","setSelected","useEffect","ToggleButtonGroup","value","exclusive","onChange","e","aria-label","style","margin","ToggleButton","flexDirection","securitiesSelect","selectGrid","paddingBottom","selectLabel","paddingRight","fontSize","chartCanvas","height","heading","LineChart","canvasRef","useRef","chartFilter","chartData","setChartData","data","week","dataset1","dataset2","month","year","all","ch","initChart","destroy","current","Chart","type","options","maintainAspectRatio","plugins","legend","elements","point","radius","scales","x","grid","ticks","autoSkip","y","labels","datasets","borderColor","borderWidth","item","ref","tableCell","padding","textRed","color","textYellow","textGreen","textOrange","FleetStatusTable","col1","col3","TableContainer","component","Paper","Table","table","TableBody","map","row","i","TableRow","TableCell","Math","random","config","gdnURL","apiKey","MAINTENANCE_CENTER","PLANNED_MAINTENANCE","TELEMATICS","GET_TELEMATICS_30_DAYS","GET_TOP5_MAINTENANCE_CENTERS_FOR_CITY","GET_ASSET_DETAILS","ENRICHTED_TELEMATICS","LOAD_DATASETS","TRUNCATE_DATASETS","STREAMS","jsc8Client","jsC8","url","maintenanceCenterList","a","city","executeRestql","City","result","console","error","telematicList","assetDetails","Asset","processBooking","payload","insightList","startStopStream","start","steamsArr","reverse","element","activateStreamApp","message","createStreamReader","streamName","filters","round","replace","response","useInterval","callback","delay","savedCallback","id","setInterval","clearInterval","tdata","Vehicle_With_Most_Frequent_Issues","Most_Common_Alert","Total_Cost_Of_Unplanned_Maintenance","Area_With_Most_Alerts","Least_Cost_Effective_Vehicle","InsightsTable","setData","initInsightList","marginBottom","Object","keys","key","hasOwnProperty","activeButtonClass","borderRadius","formatDate","date","moment","b","from","printDate","format","getRand","floor","theme","activeActionButton","spacing","flex","AlertFilters","stats","setAlterFilter","critical","attention","booked","computeClass","val","DatePicker","props","datepickerContainer","$","datepicker","onSelect","onDateChange","defaultDate","initialDate","visibility","minWidth","pagination","ModalTable","handleSelect","alertData","selectedDate","initMaintenanceCenterList","results","TableHead","background","Name","Rating","Estimated_Time","Estimated_Cost","maintenaceData","closeImg","cursor","float","ModalComponent","openModal","closeModal","React","setOpen","status","modalData","setModalData","handleClose","handleSelectDate","_key","Fragment","Dialog","fullWidth","maxWidth","onClose","aria-labelledby","DialogTitle","DialogContent","DialogContentText","paddingTop","AlertsTable","alertsData","setOpenModal","alertStats","setAlertStats","alertFilter","fdata","setFData","odata","setOData","setTData","page","setPage","initTelematicList","initAssetDetails","Fault","asetDetail","Driver","Vehicle_Model","Work_Cost","tdate","Date","Booked_In","toISOString","Invoice_Number","Cost_Center","Work_Description","log","tempData","arr","j","temparr","chunk","length","push","slice","slicer","filter","toLowerCase","Maintenance_Planned","Status_Level","forEach","Timestamp","Pagination","count","showFirstButton","showLastButton","event","handleBooking","intialize","truncateCollections","loadDataCollections","onReady","promises","collection","truncate","Promise","tpromises","section","Dashboard","setIsStreamStarted","isLoading","setIsLoading","isStopLoading","setIsStopLoading","isIntializeLoading","setIsIntializeLoading","streamConnections","setStreamConnections","setAlertsData","closeStreamAndWebSocket","terminate","startStreamAndWebSocket","establishConnectionForFree","alertsStreamConnection","prev","_consumer","on","send","JSON","stringify","messageId","parse","messageManipulation","tempArr","newData","msg","encodedMessage","decodedMessage","atob","parseMessage","Container","xs","createMuiTheme","typography","fontFamily","overrides","MuiTableCell","stickyHeader","head","MuiTypography","MuiButton","label","textTransform","MuiFormControl","MuiInputLabel","outlined","transform","MuiOutlinedInput","input","MuiPaginationItem","MuiToggleButton","MuiTableHead","MuiTableContainer","overflowX","App","ThemeProvider","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.eaced263.chunk.js","sourcesContent":["import {\n  Button,\n  Grid,\n  makeStyles,\n  CircularProgress,\n  Typography,\n} from \"@material-ui/core\";\nimport React from \"react\";\n\nconst useStyles = makeStyles({\n  header: {\n    fontWeight: \"500 !important\",\n  },\n  aboutButton: {\n    top: \"1.1rem\",\n    right: \"2rem\",\n    position: \"absolute\",\n    backgroundColor: \"rgb(208 225 243)\",\n    boxShadow: \"none\",\n    border: \"1px solid rgb(169,169,169)\",\n  },\n  intializeButton: {\n    top: \"1.1rem\",\n    right: \"8rem\",\n    position: \"absolute\",\n    backgroundColor: \"rgb(208 225 243)\",\n    boxShadow: \"none\",\n    border: \"1px solid rgb(169,169,169)\",\n  },\n});\n\nconst Header = ({ handleOnIntialize, isIntializeButtonDisabled }) => {\n  const classes = useStyles();\n\n  return (\n    <>\n      <Grid container direction=\"column\" justify=\"center\" alignItems=\"stretch\">\n        <Typography variant=\"h4\" align=\"center\" className={classes.header}>\n          Macrometa - Realtime Fleet Management\n        </Typography>\n      </Grid>\n      <Button\n        variant=\"contained\"\n        className={classes.intializeButton}\n        onClick={() => {\n          handleOnIntialize();\n        }}\n      >\n        {isIntializeButtonDisabled ? (\n          <CircularProgress size={24} />\n        ) : (\n          \"Intialize\"\n        )}\n      </Button>\n      <Button\n        variant=\"contained\"\n        className={classes.aboutButton}\n        onClick={() => {\n          window.open(\n            \"https://github.com/Macrometacorp/demo-fleet-management\",\n            \"_blank\"\n          );\n        }}\n      >\n        About\n      </Button>\n    </>\n  );\n};\n\nexport default Header;\n","import { Button, CircularProgress, makeStyles } from \"@material-ui/core\";\nimport React from \"react\";\n\nconst useStyles = makeStyles({\n  root: {\n    display: \"flex\",\n    justifyContent: \"center\",\n    marginTop: \"1rem\",\n  },\n  actionButton: {\n    marginRight: \"3rem\",\n    backgroundColor: \"rgb(208 225 243)\",\n    width: \"9rem\",\n    boxShadow: \"none\",\n    border: \"1px solid rgb(169,169,169)\",\n  },\n});\n\nconst ButtonBar = ({\n  handleOnStart,\n  handleOnStop,\n  isStartButtonDisabled,\n  isStopButtonDisabled,\n  isStreamStarted,\n}) => {\n  const classes = useStyles();\n\n  return (\n    <div className={classes.root}>\n      <Button\n        variant=\"contained\"\n        className={classes.actionButton}\n        onClick={handleOnStart}\n        disabled={isStartButtonDisabled || isStreamStarted}\n      >\n        {isStartButtonDisabled ? <CircularProgress size={24} /> : \"Start\"}\n      </Button>\n      <Button\n        variant=\"contained\"\n        className={classes.actionButton}\n        onClick={handleOnStop}\n        disabled={isStopButtonDisabled || !isStreamStarted}\n      >\n        {isStopButtonDisabled ? <CircularProgress size={24} /> : \"Stop\"}\n      </Button>\n    </div>\n  );\n};\n\nexport default ButtonBar;\n","import React, { useState, useEffect } from \"react\";\nimport { ToggleButton, ToggleButtonGroup } from \"@material-ui/lab\";\nimport { makeStyles } from \"@material-ui/core\";\n\nconst useStyles = makeStyles({\n  actionButton: {\n    backgroundColor: \"#fff\",\n    width: \"9rem\",\n    boxShadow: \"none\",\n    border: \"1px solid rgb(169,169,169)\",\n  },\n});\n\nexport default function ChartFilters({ setChartFilter }) {\n  const [selected, setSelected] = useState(\"week\");\n  const classes = useStyles();\n\n  useEffect(() => {\n    setChartFilter(selected);\n  }, [selected]);\n\n  return (\n    <ToggleButtonGroup\n      value={selected}\n      exclusive\n      onChange={(e, value) => setSelected(value)}\n      aria-label=\"text alignment\"\n      style={{ margin: \"15px 0px\" }}\n    >\n      <ToggleButton value=\"week\" className={classes.actionButton}>\n        Week\n      </ToggleButton>\n      <ToggleButton value=\"month\" className={classes.actionButton}>\n        Month\n      </ToggleButton>\n      <ToggleButton value=\"year\" className={classes.actionButton}>\n        Year\n      </ToggleButton>\n      <ToggleButton value=\"all\" className={classes.actionButton}>\n        All\n      </ToggleButton>\n    </ToggleButtonGroup>\n  );\n}\n","import Chart from \"chart.js/auto\";\nimport React, { useEffect, useRef, useState } from \"react\";\nimport { Grid, makeStyles } from \"@material-ui/core\";\nimport LocalShippingIcon from \"@material-ui/icons/LocalShipping\";\nimport ChartFilters from \"./ChartFilters\";\n\n// LineChart\n\nconst useStyles = makeStyles({\n  root: {\n    flexDirection: \"column\",\n    display: \"flex\",\n  },\n  securitiesSelect: {\n    width: \"12rem\",\n  },\n  selectGrid: {\n    paddingBottom: \"1rem\",\n  },\n  selectLabel: {\n    paddingRight: \"1rem\",\n    fontSize: \"1.5rem\",\n  },\n  chartCanvas: {\n    height: \"19.5rem\",\n  },\n  heading: {\n    margin: \"10px\",\n    fontSize: \"28px\",\n    fontWeight: 400,\n  },\n});\n\nconst LineChart = () => {\n  const canvasRef = useRef(null);\n  const classes = useStyles();\n  const [chartFilter, setChartFilter] = useState(\"week\");\n  const [chartData, setChartData] = useState({});\n\n  useEffect(() => {\n    const data = {\n      week: {\n        dataset1: [5, 10, 20, 10, 20, 30],\n        dataset2: [-5, -10, -20, -10, -20, -30],\n      },\n      month: {\n        dataset1: [15, 15, 25, 15, 25, 35],\n        dataset2: [-15, -15, -25, -15, -25, -35],\n      },\n      year: {\n        dataset1: [50, 100, 200, 100, 200, 300],\n        dataset2: [-50, -100, -200, -100, -200, -300],\n      },\n      all: {\n        dataset1: [15, 15, 25, 15, 25, 35],\n        dataset2: [-15, -15, -25, -15, -25, -35],\n      },\n    };\n    const dataset = data[chartFilter] || data['week']\n    setChartData(dataset);\n  }, [chartFilter]);\n\n  useEffect(() => {\n    const ch = initChart(chartData);\n    return () => {\n      ch.destroy();\n    };\n  }, [canvasRef.current, chartData]);\n\n  const initChart = (data) => {\n    const myChart = new Chart(canvasRef.current, {\n      type: \"line\",\n      options: {\n        maintainAspectRatio: false,\n        plugins: {\n          legend: {\n            display: false,\n          },\n        },\n        elements: {\n          point: {\n            radius: 0,\n          },\n        },\n        scales: {\n          x: {\n              grid: {\n                  display: false,\n              },\n              ticks: {\n                  autoSkip: false,\n              },\n          },\n          y: {\n              grid: {\n                  display: false,\n              },\n              ticks: {\n                  autoSkip: false,\n              },\n          },\n      },\n      },\n      data: {\n        labels: [1, 2, 3, 4, 5, 6, 7],\n        datasets: [\n          {\n            data: data.dataset1,\n            backgroundColor: \"red\",\n            borderColor: \"red\",\n            borderWidth: 1,\n          },\n          {\n            data: data.dataset2,\n            backgroundColor: \"yellow\",\n            borderColor: \"yellow\",\n            borderWidth: 1,\n          },\n        ],\n      },\n    });\n    return myChart;\n  };\n\n  return (\n    <>\n      <div className={classes.root}>\n        <Grid container alignItems=\"center\">\n          <Grid item>\n            <div style={{ display: \"flex\" }}>\n              <LocalShippingIcon style={{ fontSize: 50 }} />\n              <h3 className={classes.heading}> Fleet Status</h3>\n            </div>\n          </Grid>\n        </Grid>\n        <div className={classes.chartCanvas}>\n          <canvas ref={canvasRef} />\n        </div>\n        <ChartFilters setChartFilter={setChartFilter} />\n      </div>\n    </>\n  );\n};\n\nexport default LineChart;\n","import React from \"react\";\nimport {\n  makeStyles,\n  Table,\n  TableBody,\n  TableCell,\n  TableContainer,\n  TableRow,\n  Paper,\n} from \"@material-ui/core\";\nimport ArrowDropUpIcon from \"@material-ui/icons/ArrowDropUp\";\nimport ArrowDropDownIcon from \"@material-ui/icons/ArrowDropDown\";\n\nconst useStyles = makeStyles({\n  tableCell: {\n    padding: \"1.9px 10px\",\n    border: \"1px solid\",\n  },\n  textRed: {\n    color: 'red',\n  },\n  textYellow: {\n    color: '#d0d00f',\n  },\n  textGreen: {\n    color: 'green',\n  },\n  textOrange: {\n    color: 'orange',\n  }\n});\n\nexport default function FleetStatusTable() {\n  const classes = useStyles();\n\n  const data = [\n    {\n      col1: (\n        <>\n          Attention required <br /> (Next 7 days)\n        </>\n      ),\n      col3: (<b className={classes.textRed}>1048</b>)\n    },\n    {\n      col1: (\n        <>\n          Critical Status <br /> (Next 7 days)\n        </>\n      ),\n      col3: (<b className={classes.textYellow}>374</b>)\n    },\n    {\n      col1: (\n        <>\n          Fleet Health <br /> (Last 7 days)\n        </>\n      ),\n      col3: (<b className={classes.textGreen}>89.04%</b>)\n    },\n    {\n      col1: (\n        <>\n          Unplanned Maintenance <br /> (Last 7 days)\n        </>\n      ),\n      col3: (<b className={classes.textRed}>171</b>)\n    },\n    {\n      col1: (\n        <>\n          Planned Maintenance <br /> (Next 7 days)\n        </>\n      ),\n      col3: (<b className={classes.textRed}>234</b>)\n    },\n  ];\n\n  return (\n    <TableContainer component={Paper}>\n      <Table className={classes.table} aria-label=\"custom pagination table\">\n        <TableBody>\n          {data &&\n            data.map((row, i) => (\n              <TableRow key={Math.random()}>\n                <TableCell className={classes.tableCell}>{row.col1}</TableCell>\n                <TableCell\n                  className={classes.tableCell}\n                  style={{ width: \"50px\" }}\n                >\n                  {i % 2 === 0 ? (\n                    <ArrowDropUpIcon style={{ fontSize: 50 }} />\n                  ) : (\n                    <ArrowDropDownIcon style={{ fontSize: 50 }} />\n                  )}\n                </TableCell>\n                <TableCell className={classes.tableCell}>{row.col3}</TableCell>\n              </TableRow>\n            ))}\n        </TableBody>\n      </Table>\n    </TableContainer>\n  );\n}\n","const config = {\n    gdnURL: \"https://gdn-us-west.paas.macrometa.io\",\n    apiKey: \"demo-fleet-management_macrometa.io.demo_hitachi_fleet_management.42cNCEdgD4iIoIGdUQw8hzFkI3aDhuB1YmtkOFUEMs1dOlVHu2jETQUv0suJ1pT99c6098\",\n};\n\nexport default config;\n","const MAINTENANCE_CENTER = \"maintenance_centers\"\nconst UNPLANNED_MAINTENANCE = \"unplanned_maintenance\"\nconst PLANNED_MAINTENANCE = \"planned_maintenance\"\nconst TELEMATICS = \"telematics\"\nconst ISSUE_COUNTS = \"issue_counts\"\nconst AREA_ISSUE_COUNTS = \"area_issue_counts\"\nconst FLEET_STATS = \"fleet_stats\"\nconst VEHICLE_ISSSUE_COUNTS = \"vehicle_issue_counts\"\n\nconst LOAD_MAINTENANCE_CENTER = \"load_maintenance_centers\"\nconst LOAD_PLANNED_MAINTENANCE = \"load_planned_maintenance\"\nconst LOAD_TELEMATICS = \"load_telematics\"\nconst LOAD_AREA_ISSIE_COUNTS = \"load_area_issue_counts\"\nconst LOAD_ISSSUE_COUNTS = \"load_issue_counts\"\nconst LOAD_VEHICLE_ISSSUE_COUNTS = \"load_vehicle_issue_counts\"\nconst LOAD_FLEET_STATS_COUNTS = \"load_fleet_stats_counts\"\n\nexport const ON_READY = \"on_ready\"\n\nexport const GET_TELEMATICS_30_DAYS = \"get_telematics_30_days\"\nexport const GET_TOP5_MAINTENANCE_CENTERS_FOR_CITY = \"get_top5_maintenance_centers_for_city\"\nexport const GET_ASSET_DETAILS = \"get_asset_details\"\nexport const GET_TELEMATIC_INSIGHTS = \"get_telematic_insights\"\nexport const INSERT_UNPLANNED_MAINTENANCE = \"insert_unplanned_maintenance\"\nexport const ENRICHTED_TELEMATICS =  \"enriched-telematics\"\n\nexport const COLLECTIONS = {\n  MAINTENANCE_CENTER,\n  PLANNED_MAINTENANCE,\n  TELEMATICS,\n};\n\nexport const LOAD_DATASETS = [\n  LOAD_MAINTENANCE_CENTER,\n  LOAD_PLANNED_MAINTENANCE,\n  LOAD_TELEMATICS,\n  LOAD_AREA_ISSIE_COUNTS,\n  LOAD_ISSSUE_COUNTS,\n  LOAD_VEHICLE_ISSSUE_COUNTS,\n  LOAD_FLEET_STATS_COUNTS\n]\n\nexport const TRUNCATE_DATASETS = [\n  MAINTENANCE_CENTER,\n  PLANNED_MAINTENANCE,\n  TELEMATICS,\n  UNPLANNED_MAINTENANCE,\n  ISSUE_COUNTS,\n  AREA_ISSUE_COUNTS,\n  FLEET_STATS,\n  VEHICLE_ISSSUE_COUNTS\n]\n\nexport const RESTQL = {\n  GET_TELEMATICS_30_DAYS,\n  GET_TOP5_MAINTENANCE_CENTERS_FOR_CITY,\n  GET_ASSET_DETAILS\n}\n\nexport const STREAMS =  [\n  \"insights-worker\",\n  \"fleet-stats-worker\",\n  \"telematics-worker\",\n  \"telematics-simulator\",\n]\n","import jsC8 from \"jsc8\";\nimport config from \"../services/config\";\nimport {\n  GET_TOP5_MAINTENANCE_CENTERS_FOR_CITY,\n  GET_TELEMATICS_30_DAYS,\n  GET_TELEMATIC_INSIGHTS,\n  GET_ASSET_DETAILS,\n  INSERT_UNPLANNED_MAINTENANCE,\n  STREAMS,\n} from \"../util/constants\";\n\nconst jsc8Client = new jsC8({\n  url: config.gdnURL,\n  apiKey: `${config.apiKey}`,\n});\n\nexport const maintenanceCenterList = async (city = \"London\") => {\n  try {\n    const { result } = await jsc8Client.executeRestql(\n      GET_TOP5_MAINTENANCE_CENTERS_FOR_CITY,\n      { City: city }\n    );\n    return result;\n  } catch (error) {\n    console.error(error);\n    throw error\n  }\n};\n\nexport const telematicList = async () => {\n  try {\n    const { result } = await jsc8Client.executeRestql(GET_TELEMATICS_30_DAYS);\n    return result;\n  } catch (error) {\n    console.error(error);\n    throw error\n  }\n};\n\nexport const assetDetails = async (Asset) => {\n  try {\n    const { result } = await jsc8Client.executeRestql(GET_ASSET_DETAILS,{Asset});\n    return result;\n  } catch (error) {\n    console.error(error);\n    throw error\n  }\n};\n\nexport const processBooking = async (payload) => {\n  try {\n    const { result } = await jsc8Client.executeRestql(INSERT_UNPLANNED_MAINTENANCE, payload);\n    return result;\n  } catch (error) {\n    console.error(error);\n    throw error\n  }\n};\n\nexport const insightList = async () => {\n  try {\n    const { result } = await jsc8Client.executeRestql(GET_TELEMATIC_INSIGHTS);\n    const [data] = result;\n    return data;\n  } catch (error) {\n    console.error(error);\n    throw error\n  }\n};\n\n\nexport const startStopStream = async (start = false) => {\n  try {\n  let steamsArr = STREAMS;\n  if(start === false){\n    steamsArr.reverse()\n  }\n  for (const element of steamsArr) {\n      await jsc8Client.activateStreamApp(element, start);\n    }\n    return true;\n  } catch (error) {\n    console.error(\"Failed start ot stop strams\", error.message);\n    return false;\n  }\n};\n\nexport const createStreamReader = async (streamName, filters) => {\n  let response;\n  try {\n      response = await jsc8Client.createStreamReader(\n          streamName,\n          `${streamName}-${Math.round(Math.random() * 1000)}`,\n          false,\n          false,\n          config.gdnURL.replace(\"https://\", \"\"),\n          { filters }\n      );\n  } catch (error) {\n      console.error(error);\n  }\n  return response;\n};","import { useEffect, useRef } from \"react\";\n\nconst useInterval = (callback, delay) => {\n    const savedCallback = useRef();\n\n    useEffect(() => {\n        savedCallback.current = callback;\n    }, [callback]);\n\n    useEffect(() => {\n        const tick = () => {\n            savedCallback.current();\n        };\n\n        if (delay !== null) {\n            let id = setInterval(tick, delay);\n            return () => clearInterval(id);\n        }\n    }, [delay]);\n};\n\nexport default useInterval;","import React, { useEffect, useState } from \"react\";\nimport {\n  makeStyles,\n  Table,\n  TableBody,\n  TableCell,\n  TableContainer,\n  TableRow,\n  Paper,\n} from \"@material-ui/core\";\nimport { insightList } from \"../../services/streams\";\nimport useInterval from \"../../hooks/useInterval\";\n\nconst useStyles = makeStyles({\n  tableCell: {\n    padding: \"0.7rem\",\n    border: \"1px solid\",\n  },\n  heading: {\n    margin: \"10px\",\n    fontSize: \"28px\",\n    fontWeight: 400,\n  },\n});\n\nconst tdata = {\n  Vehicle_With_Most_Frequent_Issues: \"Vechicle with most frequent issue\",\n  Most_Common_Alert: \"Most Common Alert\",\n  Total_Cost_Of_Unplanned_Maintenance: \"Total Cost of Unplanned Maintenance\",\n  Area_With_Most_Alerts: \"Area with most Alerts\",\n  Least_Cost_Effective_Vehicle: \"Least Cost Effective Vehicle\",\n};\n\nexport default function InsightsTable() {\n  const classes = useStyles();\n  const [data, setData] = useState({});\n  const initInsightList = async () => {\n    try {      \n      const result = await insightList();\n      setData(result);\n    } catch (error) {\n      console.error('falied to load the insigths', error.message);\n    }\n  };\n  useEffect(() => {\n    initInsightList();\n  }, []);\n  useInterval(initInsightList, 3000);\n  return (\n    <>\n      <div style={{ display: \"flex\", marginBottom: \"10px\" }}>\n        <span\n          className=\"fab fa-searchengin\"\n          style={{ fontSize: 40, marginTop: \"10px\" }}\n        ></span>\n        <h3 className={classes.heading}> Insights</h3>\n      </div>\n      <TableContainer component={Paper}>\n        <Table className={classes.table} aria-label=\"custom pagination table\">\n          <TableBody>\n            {Object.keys(tdata) &&\n              Object.keys(tdata).map((key) => (\n                <TableRow key={Math.random()}>\n                  <TableCell className={classes.tableCell}>\n                    {tdata[key]}\n                  </TableCell>\n                  <TableCell className={classes.tableCell}>\n                    {data && data.hasOwnProperty(key) && data[key]}\n                  </TableCell>\n                  <TableCell className={classes.tableCell}>\n                    investigate\n                  </TableCell>\n                </TableRow>\n              ))}\n          </TableBody>\n        </Table>\n      </TableContainer>\n    </>\n  );\n}\n","import moment from \"moment\";\n\nexport const activeButtonClass = {\n  backgroundColor: \"#4b81c3\",\n  width: \"9rem\",\n  boxShadow: \"none\",\n  border: \"1px solid rgb(169,169,169)\",\n  color: \"#ffffff\",\n  borderRadius: 0,\n  \"&:hover\": {\n    backgroundColor: \"#4b81c3\",\n    color: \"#ffffff\",\n  },\n};\n\nexport const slicer = (arr, size) => {\n  var i,\n    j,\n    temparr = [],\n    chunk = size;\n  for (i = 0, j = arr.length; i < j; i += chunk) {\n    temparr.push(arr.slice(i, i + chunk));\n  }\n  return temparr;\n};\n\nexport const formatDate = (date) => {\n  var a = moment(date);\n  var b = moment();\n  return a.from(b); // \"a day ago\"\n};\n\nexport const printDate = (date) => {\n  if (date) return moment(date).format(\"D MMM YYYY\");\n  return;\n};\n\nexport const getRand = () => Math.floor(1000000 + Math.random() * 900000);\n\nexport const parseMessage = (msg) => {\n  const encodedMessage = JSON.parse(msg).payload;\n  const messageId = JSON.parse(msg).messageId;\n  const decodedMessage = atob(encodedMessage);\n\n  if (decodedMessage.length === 0) {\n    return { newData: {}, messageId };\n  }\n  const newData = JSON.parse(decodedMessage);\n  return { newData, messageId };\n};\n","import React, { useState, useEffect } from \"react\";\nimport { makeStyles, Button } from \"@material-ui/core\";\nimport { activeButtonClass } from \"../../services/util\";\n\nconst useStyles = makeStyles((theme) => ({\n  actionButton: {\n    backgroundColor: \"#ffffff\",\n    width: \"9rem\",\n    boxShadow: \"none\",\n    border: \"1px solid rgb(169,169,169)\",\n    borderRadius: 0\n  },\n  activeActionButton: activeButtonClass,\n  root: {\n    display: 'flex',\n    \"& > *\": {\n      marginRight: theme.spacing(2),\n      marginTop: \"0.6rem\",\n      flex: 1\n    },\n  },\n}));\n\nexport default function AlertFilters({stats, setAlterFilter}) {\n  const classes = useStyles();\n  const [selected, setSelected] = useState(\"all\");\n  const { all, critical, attention, booked } = stats;\n  const computeClass = (val) =>\n    `${selected === val ? classes.activeActionButton : classes.actionButton}`;\n\n  useEffect(()=>{\n    setAlterFilter(selected);\n  },[selected])\n\n  return (\n    <>\n      <div className={classes.root}>\n        <Button\n          variant=\"outlined\"\n          onClick={() => setSelected(\"all\")}\n          className={computeClass(\"all\")}\n        >\n          All ({all})\n        </Button>\n        <Button\n          variant=\"outlined\"\n          onClick={() => setSelected(\"critical\")}\n          className={computeClass(\"critical\")}\n        >\n          Critical ({critical})\n        </Button>\n        <Button\n          variant=\"outlined\"\n          onClick={() => setSelected(\"attention\")}\n          className={computeClass(\"attention\")}\n        >\n          Attention ({attention})\n        </Button>\n        <Button\n          variant=\"outlined\"\n          onClick={() => setSelected(\"booked\")}\n          className={computeClass(\"booked\")}\n        >\n          Booked ({booked})\n        </Button>\n      </div>\n    </>\n  );\n}\n","import React, { useEffect, useRef } from \"react\";\nimport { Button, makeStyles } from \"@material-ui/core\";\nimport { activeButtonClass } from \"../services/util\";\n\nconst useStyles = makeStyles((theme) => ({\n  activeActionButton: { ...activeButtonClass, width: \"5rem\" },\n  root: {\n    \"& > *\": {\n      margin: theme.spacing(1),\n    },\n  },\n}));\n\nconst DatePicker = (props) => {\n  const datepickerContainer = useRef();\n  const classes = useStyles();\n\n  useEffect(() => {\n    window.$(datepickerContainer.current).datepicker({\n      onSelect: function (date) {\n        props.onDateChange(date);\n      },\n      defaultDate: props.initialDate,\n    });\n    return () => {\n      window.$(datepickerContainer.current).datepicker(\"destroy\");\n    };\n  }, []);\n\n  return (\n    <>\n      <input\n        ref={datepickerContainer}\n        style={{ visibility: \"hidden\", width: 0 }}\n      />\n      <Button\n        variant=\"contained\"\n        color=\"primary\"\n        style={{padding:'0px'}}\n        className={classes.activeActionButton}\n        onClick={() => window.$(datepickerContainer.current).datepicker(\"show\")}\n      >\n        Select\n      </Button>\n      {/* {props.initialDate} */}\n    </>\n  );\n};\n\nexport default DatePicker;\n","import React, { useState, useEffect } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport {\n  Table,\n  TableBody,\n  TableCell,\n  TableContainer,\n  TableHead,\n  TableRow,\n  Paper,\n  Typography,\n} from \"@material-ui/core\";\nimport DatePicker from \"../DatePicker\";\nimport { maintenanceCenterList } from '../../services/streams'\n\nconst useStyles = makeStyles({\n  table: {\n    minWidth: 650,\n  },\n  root: {\n    // paddingTop: \"1rem\",\n  },\n  pagination: {\n    borderRadius: \"none\",\n  },\n});\n\nexport default function ModalTable({handleSelect, alertData}) {\n  const classes = useStyles();\n  const [selectedDate, ] = useState(\"06/15/2021\");\n  const [data, setData] = useState([]);\n\n  const initMaintenanceCenterList = async(city) => {\n    try {      \n      const results = await maintenanceCenterList(city);\n      setData(results)\n    } catch (error) {\n      console.error('falied to load maintenace centers', error.message)\n    }\n  }\n\n  useEffect(()=>{\n    const { City } = alertData;\n    initMaintenanceCenterList(City);\n  },[])\n\n  return (\n    <>\n      <Typography component={\"div\"} className={classes.root}>\n        <TableContainer component={Paper}>\n          <Table className={classes.table} aria-label=\"simple table\">\n            <TableHead>\n              <TableRow>\n                <TableCell>Maintenance Center</TableCell>\n                <TableCell align=\"center\">Rating</TableCell>\n                <TableCell align=\"center\">City</TableCell>\n                <TableCell align=\"center\">Estimated Time</TableCell>\n                <TableCell align=\"center\">Estimated Cost</TableCell>\n                <TableCell align=\"center\">Select</TableCell>\n              </TableRow>\n            </TableHead>\n            <TableBody>\n              {data &&\n                data.map((row, i) => (\n                  <TableRow\n                    key={Math.random()}\n                    style={i % 2 ? { background: \"rgb(208 225 243)\" } : {}}\n                  >\n                    <TableCell align=\"center\">\n                      {row.Name}\n                    </TableCell>\n                    <TableCell align=\"center\">{row.Rating}/5.0</TableCell>\n                    <TableCell align=\"center\">{row.City}</TableCell>\n                    <TableCell align=\"center\">{row.Estimated_Time}  {row.Estimated_Time === 1? 'Day': 'Days'}</TableCell>\n                    <TableCell align=\"center\">${row.Estimated_Cost}</TableCell>\n                    <TableCell align=\"center\">\n                      <DatePicker\n                        key={Math.random()}\n                        onDateChange={(date) => {\n                          handleSelect({date, maintenaceData:row})\n                        }}\n                        initialDate={selectedDate}\n                      />\n                    </TableCell>\n                  </TableRow>\n                ))}\n            </TableBody>\n          </Table>\n        </TableContainer>\n      </Typography>\n    </>\n  );\n}\n","import React, { useState, useEffect } from \"react\";\nimport {\n  Dialog,\n  DialogContent,\n  DialogContentText,\n  DialogTitle,\n} from \"@material-ui/core\";\nimport ModalTable from \"./tables/ModalTable\";\nimport CancelPresentationIcon from \"@material-ui/icons/CancelPresentation\";\n\nlet closeImg = {\n  cursor: \"pointer\",\n  float: \"right\",\n  marginTop: \"5px\",\n  width: \"50px\",\n};\n\nexport default function ModalComponent(props) {\n  const { openModal, closeModal, handleSelect } = props;\n  const [open, setOpen] = React.useState(false);\n  const [modalData, setModalData] = useState({\n    status: false,\n    data: {},\n  });\n\n  useEffect(() => {\n    setOpen(openModal.status);\n    setModalData(openModal.data);\n  }, [openModal.status]);\n\n  const handleClose = () => {\n    setOpen(false);\n    closeModal();\n  };\n\n  const handleSelectDate = (data) => {\n    setOpen(false);\n    closeModal();\n    handleSelect({ ...data, _key: modalData._key, data: modalData });\n  };\n  const { Asset } = modalData;\n  return (\n    <React.Fragment>\n      <Dialog\n        fullWidth={true}\n        maxWidth=\"md\"\n        open={open}\n        onClose={handleClose}\n        aria-labelledby=\"max-width-dialog-title\"\n      >\n        <DialogTitle id=\"max-width-dialog-title\">\n          {Asset}\n          <CancelPresentationIcon\n            fontSize=\"large\"\n            onClick={handleClose}\n            style={closeImg}\n          />\n        </DialogTitle>\n        <DialogContent>\n          <DialogContentText>\n            <ModalTable alertData={modalData} handleSelect={(data) => handleSelectDate(data)} />\n          </DialogContentText>\n        </DialogContent>\n      </Dialog>\n    </React.Fragment>\n  );\n}\n","import React, { useState, useEffect } from \"react\";\nimport {\n  makeStyles,\n  Table,\n  TableBody,\n  TableCell,\n  TableContainer,\n  TableRow,\n  TableHead,\n  Paper,\n  Button,\n} from \"@material-ui/core\";\nimport Pagination from \"@material-ui/lab/Pagination\";\nimport NotificationsActiveIcon from \"@material-ui/icons/NotificationsActive\";\nimport AlertFilters from \"./AlertFilters\";\nimport ModalComponent from \"../ModalComponent\";\nimport {\n  activeButtonClass,\n  slicer,\n  formatDate,\n  printDate,\n  getRand,\n} from \"../../services/util\";\nimport { telematicList, assetDetails, processBooking } from \"../../services/streams\";\n\nconst useStyles = makeStyles({\n  table: {\n    minWidth: 650,\n  },\n  root: {\n    paddingTop: \"1rem\",\n  },\n  pagination: {\n    borderRadius: \"none\",\n  },\n  activeActionButton: { ...activeButtonClass, width: \"4rem\" },\n  heading: {\n    margin: \"10px\",\n    fontSize: \"28px\",\n    fontWeight: 400,\n  },\n});\n\nexport default function AlertsTable({alertsData}) {\n  const classes = useStyles();\n  const [openModal, setOpenModal] = useState({ status: false, data: {} });\n  const [alertStats, setAlertStats] = useState({\n    all: 0,\n    critical: 0,\n    attention: 0,\n    booked: 0,\n  });\n  const [alertFilter, setAlterFilter] = useState(\"all\");\n  const [fdata, setFData] = useState([]);\n  const [odata, setOData] = useState([]);\n  const [tdata, setTData] = useState([]);\n  const [page, setPage] = React.useState(1);\n  const handleChange = (event, value) => {\n    setPage(value);\n  };\n\n  const initTelematicList = async () => {\n    try {\n      const results = await telematicList();\n      setOData(results);\n    } catch (error) {\n      console.error(\"falied to load maintenace centers\", error.message);\n    }\n  };\n\n  const initAssetDetails = async (data) => {\n    try {\n      const { Asset, Fault } = data.data;\n      const { date, maintenaceData } = data;\n      const [asetDetail] = await assetDetails(Asset);\n      const { Driver, Vehicle_Model } = asetDetail;\n      const { Estimated_Cost: Work_Cost } = maintenaceData;\n      const tdate = new Date(date);\n      const payload = {\n        Asset,\n        Booked_In: tdate.toISOString(),\n        Invoice_Number: getRand(),\n        Cost_Center: getRand(),\n        Vehicle_Model,\n        Driver,\n        Work_Description: Fault,\n        Work_Cost,\n      };\n      await processBooking(payload);\n      console.log(\"successfully booking processed!\");\n    } catch (error) {\n      console.error('Failed to book maintenance', error.message);\n    }\n  };\n\n  const handleBooking = (data) => {\n    let tdata = odata.map((item) => {\n      if (item._key === data._key) {\n        item.Maintenance_Planned = \"Yes\";\n        const date = new Date(data.date);\n        item.Booked_In = date.toISOString();\n      }\n      return item;\n    });\n    setOData(tdata);\n    initAssetDetails(data);\n  };\n\n  useEffect(() => {\n    initTelematicList();\n  }, []);\n\n  useEffect(() => {\n    let data = odata.filter((item) => {\n      let filter = alertFilter.toLowerCase();\n      if (filter === \"all\") return true;\n      if (filter === \"booked\") {\n        return item.Maintenance_Planned.toLowerCase() === \"yes\";\n      } else {\n        return item.Status_Level.toLowerCase() === filter;\n      }\n    });\n    const tempData = slicer(data, 8);\n    setFData(tempData);\n    setTData(tempData[(page - 1) | 0]);\n    setPage(1);\n  }, [alertFilter, odata]);\n\n  useEffect(() => {\n    setTData(fdata[page - 1]);\n  }, [page]);\n\n  useEffect(()=>{\n    const [ data = {} ] = alertsData;\n    if(data && Object.keys(data).length > 0){\n      data._key = getRand();\n      setOData([data, ...odata]);\n    }\n  },[alertsData])\n\n  useEffect(() => {\n    let stats = { all: odata.length, critical: 0, attention: 0, booked: 0 };\n    odata.forEach((item) => {\n      if (item.Maintenance_Planned.toLowerCase() === \"yes\") stats.booked += 1;\n      if (item.Status_Level.toLowerCase() === \"critical\") stats.critical += 1;\n      if (item.Status_Level.toLowerCase() === \"attention\") stats.attention += 1;\n    });\n    setAlertStats(stats);\n  }, [odata]);\n\n  return (\n    <>\n      <div style={{ display: \"flex\" }}>\n        <NotificationsActiveIcon style={{ fontSize: 50 }} />\n        <h3 className={classes.heading}>Alerts</h3>\n      </div>\n      <AlertFilters stats={alertStats} setAlterFilter={setAlterFilter} />\n      <div className={classes.root}>\n        <TableContainer component={Paper}>\n          <Table className={classes.table} aria-label=\"simple table\">\n            <TableHead>\n              <TableRow>\n                <TableCell style={{ width: \"5rem\" }}>Vechicle ID</TableCell>\n                <TableCell align=\"center\">Alert &nbsp; Description</TableCell>\n                <TableCell align=\"center\">Date &nbsp; Logged</TableCell>\n                <TableCell align=\"center\">Status level</TableCell>\n                <TableCell align=\"center\">Maintenance &nbsp; Planned</TableCell>\n                <TableCell align=\"center\" style={{ width: \"5rem\" }}>\n                  Action\n                </TableCell>\n              </TableRow>\n            </TableHead>\n            <TableBody>\n              {tdata &&\n                tdata.map((row, i) => (\n                  <TableRow\n                    key={Math.random()}\n                    style={i % 2 ? { background: \"rgb(208 225 243)\" } : {}}\n                  >\n                    <TableCell align=\"center\">{row.Asset}</TableCell>\n                    <TableCell align=\"center\">{row.Fault}</TableCell>\n                    <TableCell align=\"center\">\n                      {formatDate(row.Timestamp)}\n                    </TableCell>\n                    <TableCell\n                      align=\"center\"\n                      style={{\n                        color: `${\n                          row.Status_Level === \"Critical\" ? \"red\" : \"\"\n                        }`,\n                      }}\n                    >\n                      {row.Status_Level}\n                    </TableCell>\n                    <TableCell align=\"center\">\n                      {row.Maintenance_Planned}\n                    </TableCell>\n                    <TableCell align=\"center\">\n                      {row.Maintenance_Planned.toLowerCase() === \"yes\" ? (\n                        <>\n                        Booked\n                        <br/>\n                        {printDate(row.Booked_In)}\n                        </>\n                      ) : (\n                        <Button\n                          variant=\"contained\"\n                          color=\"primary\"\n                          className={classes.activeActionButton}\n                          style={{ padding: \"0px\" }}\n                          onClick={() =>\n                            setOpenModal({ status: true, data: row })\n                          }\n                        >\n                          Book\n                        </Button>\n                      )}\n                    </TableCell>\n                  </TableRow>\n                ))}\n            </TableBody>\n          </Table>\n          <Pagination\n            className={classes.pagination}\n            count={fdata.length}\n            showFirstButton\n            showLastButton\n            page={page}\n            onChange={handleChange}\n          />\n        </TableContainer>\n        <ModalComponent\n          openModal={openModal}\n          closeModal={() => setOpenModal({ status: false, data: { id: 0 } })}\n          handleSelect={(data) => handleBooking(data)}\n        />\n      </div>\n    </>\n  );\n}\n","import jsC8 from \"jsc8\";\nimport config from \"../services/config\";\nimport { TRUNCATE_DATASETS, LOAD_DATASETS, ON_READY } from \"../util/constants\";\nimport { startStopStream  } from \"./streams\";\n\nconst jsc8Client = new jsC8({\n  url: config.gdnURL,\n  apiKey: `${config.apiKey}`,\n});\n\nexport const intialize = async (callback) => {\n  try {\n    await startStopStream();\n    await truncateCollections();\n    await loadDataCollections();\n    await onReady();\n    callback(false);\n  } catch (error) {\n    console.error(\"Failed to intialize\", error.message);\n    callback(false);\n  }\n};\n\nconst truncateCollections = async () => {\n  try {\n    const promises = TRUNCATE_DATASETS.map((collection) =>\n      jsc8Client.collection(collection).truncate()\n    );\n    await Promise.all(promises);\n  } catch (error) {\n    console.error(\"Failed to truncate\", error.message);\n  }\n};\n\nconst loadDataCollections = async () => {\n  try {\n    const promises = LOAD_DATASETS.slice(0,2).map(\n      (collection) => jsc8Client.executeRestql(collection)\n    );\n    await Promise.all(promises);\n    await jsc8Client.executeRestql(LOAD_DATASETS[2]);\n    const tpromises = LOAD_DATASETS.slice(3).map(\n      (collection) => jsc8Client.executeRestql(collection)\n    );\n    await Promise.all(tpromises);\n  } catch (error) {\n    console.error(\"Failed to load\", error.message);\n  }\n};\n\nconst onReady = async () => {\n  try {\n    await jsc8Client.executeRestql(ON_READY);\n  } catch (error) {\n    console.error(\"Failed to onReady\", error.message);\n  }\n};\n","import React, { useState } from \"react\";\nimport { Container, makeStyles, Grid } from \"@material-ui/core\";\nimport Header from \"./Header\";\nimport ButtonBar from \"./ButtonBar\";\nimport LineChart from \"./LineChart\";\nimport FleetStatusTable from \"./tables/FleetStatusTable\";\nimport InsightsTable from \"./tables/InsightsTable\";\nimport AlertsTable from \"./tables/AlertsTable\";\nimport { intialize } from \"../services/restql\";\nimport { startStopStream, createStreamReader } from \"../services/streams\";\nimport { parseMessage } from \"../services/util\";\nimport { ENRICHTED_TELEMATICS } from \"../util/constants\";\n\nconst useStyles = makeStyles({\n  root: {\n    padding: \"0.5rem\",\n  },\n  section: {\n    paddingRight: \"2rem\",\n  },\n  aboutButton: {\n    top: \"1.1rem\",\n    right: \"2rem\",\n    position: \"absolute\",\n    backgroundColor: \"rgb(208 225 243)\",\n    boxShadow: \"none\",\n    border: \"1px solid rgb(169,169,169)\",\n  },\n});\n\nconst Dashboard = () => {\n  const classes = useStyles();\n  const [isStreamStarted, setIsStreamStarted] = useState(false);\n  const [isLoading, setIsLoading] = useState(false);\n  const [isStopLoading, setIsStopLoading] = useState(false);\n  const [isIntializeLoading, setIsIntializeLoading] = useState(false);\n  const [streamConnections, setStreamConnections] = useState([]);\n  const [alertsData, setAlertsData] = useState([]);\n\n  //button callback for all the rest\n  const handleOnStart = () => {\n    console.log(\"starting streams...\");\n    setIsLoading(true);\n    startStreamAndWebSocket();\n    console.log(\"started streams!\");\n  };\n  const handleOnStop = () => {\n    console.log(\"stoping intialized...\");\n    setIsStopLoading(true);\n    closeStreamAndWebSocket();\n    console.log(\"stoped intialized!\");\n  };\n  const handleOnIntialize = async () => {\n    console.log(\"starting intialized...\");\n    setIsIntializeLoading(true);\n    await intialize(setIsIntializeLoading);\n    console.log(\"started intialized!\");\n  };\n\n  const closeStreamAndWebSocket = async () => {\n    try {\n      for (const elements of streamConnections) {\n        await elements.terminate();\n      }\n      const response = await startStopStream();\n      if (response) {\n        setIsStreamStarted(false);\n      }\n      setIsStopLoading(false);\n    } catch (error) {\n      console.error(\"Failed to close steam and webscoker\", error.message);\n    }\n  };\n\n  const startStreamAndWebSocket = async () => {\n    try {\n      const response = await startStopStream(true);\n      if (response) {\n        const alertsStreamConnection = await establishConnectionForFree(\n          ENRICHTED_TELEMATICS\n        );\n        setStreamConnections((prev) => [\n          ...streamConnections,\n          alertsStreamConnection,\n        ]);\n        setIsStreamStarted(true);\n      }\n      setIsLoading(false);\n    } catch (error) {\n      console.error(\"Failed to close steam and webscoket\", error.message);\n    }\n  };\n\n  const establishConnectionForFree = async (streamName) => {\n    try {\n      const _consumer = await createStreamReader(streamName);\n      _consumer.on(\"open\", () =>\n        console.log(`Connection open for ${streamName}`)\n      );\n      _consumer.on(\"error\", (error) =>\n        console.error(`Connection error for ${streamName}`, error)\n      );\n      _consumer.on(\"close\", () =>\n        console.log(`Connection close for ${streamName}`)\n      );\n\n      _consumer.on(\"message\", (message) => {\n        _consumer.send(\n          JSON.stringify({ messageId: JSON.parse(message).messageId })\n        );\n\n        messageManipulation(message, ENRICHTED_TELEMATICS);\n      });\n      return _consumer;\n    } catch (error) {\n      console.error(\"error\", error);\n    }\n  };\n\n  const messageManipulation = (message, streamName) => {\n    let tempArr = [];\n    const { newData } = parseMessage(message);\n    if (!newData) {\n      return;\n    }\n    tempArr.push(newData);\n    setAlertsData([...alertsData, ...tempArr]);\n  };\n\n  return (\n    <>\n      <Container className={classes.root} maxWidth={false}>\n        <Header\n          handleOnIntialize={handleOnIntialize}\n          isIntializeButtonDisabled={isIntializeLoading}\n        />\n        <ButtonBar\n          handleOnStart={handleOnStart}\n          handleOnStop={handleOnStop}\n          isStartButtonDisabled={isLoading}\n          isStopButtonDisabled={isStopLoading}\n          isStreamStarted={isStreamStarted}\n        />\n        <Grid\n          container\n          direction=\"row\"\n          style={{ paddingTop: \"32px\" }}\n          alignItems=\"flex-start\"\n        >\n          <Grid item xs={6} className={classes.section}>\n            <Grid container direction=\"row\" alignItems=\"flex-start\">\n              <Grid item xs={6} className={classes.section}>\n                <LineChart />\n              </Grid>\n              <Grid\n                item\n                xs={6}\n                className={classes.section}\n                style={{ marginTop: \"4rem\" }}\n              >\n                <FleetStatusTable />\n              </Grid>\n              <Grid item xs={12} className={classes.section}>\n                <InsightsTable />\n              </Grid>\n            </Grid>\n          </Grid>\n          <Grid item xs={6} className={classes.section}>\n            <AlertsTable alertsData={alertsData} />\n          </Grid>\n        </Grid>\n      </Container>\n    </>\n  );\n};\n\nexport default Dashboard;\n","import { createMuiTheme, ThemeProvider } from \"@material-ui/core\";\nimport Dashboard from \"./app/components/Dashboard\";\n\nconst theme = createMuiTheme({\n  typography: {\n    fontFamily: \"Lato\",\n  },\n  overrides: {\n    MuiTableCell: {\n      root: {\n        padding: \"0.8rem\",\n      },\n      stickyHeader: {\n        backgroundColor: \"#d0e0f3\",\n      },\n      head: {\n        color: \"#ffffff\",\n        fontWeight: 900,\n      },\n    },\n    MuiTypography: {\n      root: {\n        fontWeight: \"600 !important\",\n      },\n    },\n    MuiButton: {\n      label: {\n        textTransform: \"capitalize\",\n        fontWeight: \"600\",\n      },\n    },\n    MuiFormControl: {\n      root: {\n        height: \"56px\",\n      },\n    },\n    MuiInputLabel: {\n      outlined: {\n        transform: \"translate(14px, 0.7rem) scale(1)\",\n      },\n    },\n    MuiOutlinedInput: {\n      input: {\n        padding: \"0.65rem 14px\",\n      },\n    },\n    MuiPaginationItem: {\n      root: {\n        borderRadius: \"0px\",\n      },\n      page: {\n        padding: \"25px\",\n        \"&$selected\": {\n          backgroundColor: \"#4b81c3\",\n          color: \"#ffffff\",\n          \"&:hover\": {\n            backgroundColor: \"#4b81c3\",\n            color: \"#ffffff\",\n          },\n        },\n        \"&:hover\": {\n          backgroundColor: \"#4b81c3\",\n          color: \"#ffffff\",\n        },\n      },\n    },\n    MuiToggleButton: {\n      root: {\n        \"&$selected\": {\n          backgroundColor: \"#4b81c3\",\n          color: \"#ffffff\",\n          \"&:hover\": {\n            backgroundColor: \"#4b81c3\",\n            color: \"#ffffff\",\n          },\n        },\n        \"&:hover\": {\n          backgroundColor: \"#4b81c3\",\n          color: \"#ffffff\",\n        },\n      },\n    },\n    MuiTableHead: {\n      root: {\n        backgroundColor: \"#4b81c3\",\n      },\n    },\n    MuiTableContainer: {\n      root: {\n        overflowX: \"inherit\",\n      },\n    },\n  },\n});\n\nconst App = () => {\n  return (\n    <>\n      <ThemeProvider theme={theme}>\n        <Dashboard />\n      </ThemeProvider>\n    </>\n  );\n};\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}